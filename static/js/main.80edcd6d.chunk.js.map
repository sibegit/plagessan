{"version":3,"sources":["components/template/Header.jsx","components/template/Main.jsx","components/home/Home.jsx","api/datasource.js","components/template/FormCadastro.jsx","pages/area_restrita/cadastro/utils.jsx","pages/area_restrita/cadastro/dimensao.jsx","pages/area_restrita/cadastro/indicador.jsx","pages/area_restrita/cadastro/categoria.jsx","pages/area_restrita/cadastro/unidade.jsx","pages/area_restrita/cadastro/fonte.jsx","pages/area_restrita/cadastro/nota.jsx","pages/area_restrita/cadastro/variavel_tipo.jsx","pages/area_restrita/cadastro/variavel.jsx","pages/area_restrita/cadastro/agregacao_tipo.jsx","pages/area_restrita/cadastro/agregacao.jsx","pages/area_restrita/dados/importacao.jsx","pages/area_restrita/dados/exclusao.jsx","components/template/Dialog.jsx","pages/area_restrita/dados/utils.jsx","pages/area_restrita/dados/consulta_dimensoes_agregacoes_territoriais/planilha.jsx","pages/area_restrita/dados/consulta_dimensoes_agregacoes_territoriais/DialogCartograma.jsx","pages/area_restrita/dados/consulta_dimensoes_agregacoes_territoriais/cartograma.jsx","pages/area_restrita/dados/consulta_dimensoes_agregacoes_territoriais/index.jsx","pages/area_restrita/dados/consulta_dimensoes_condicoes_indicadores/index.jsx","main/Routes.jsx","main/App.jsx","registerServiceWorker.js","index.js"],"names":["className","style","height","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","role","aria-labelledby","to","MainContainerConsulta","props","css","Fragment","children","MainContainerAreaRestrita","icon","title","subtitle","process","apiURL","API_URL","window","location","search","getDataSource","URL","a","method","fetch","headers","response","json","data","status","Error","error","isOk","console","log","TypeError","message","putData","key","values","body","JSON","stringify","postData","deleteDataByKey","deleteDataByJSON","useState","errorMessage","setErrorMessage","errorMessageOpen","setErrorMessageOpen","OnClickSalvar","getData","recordID","dataURL","getUpdateDataGridRows","setFormOpen","alert","Modal","open","formOpen","Box","sx","position","top","left","transform","width","bgcolor","border","boxShadow","p","Collapse","in","Alert","severity","onClick","Utils","DeleteButton","updateRows","checkDelete","field","headerName","renderCell","params","row","onlyview_label","confirm","result","disableClickEventBubbling","FormSelectInput","Label","onChange","value","options","isMulti","isSearchable","getOptionLabel","option","nome","getOptionValue","FormSelectInputMulti","uf_nome","municipio_codigo_ibge","FormTextInput","TextField","variant","size","e","target","fullWidth","DataGridHeader","dataGridRows","columns","onClickAdd","React","rows","setRows","pesquisarValue","setPesquisarValue","requestSearch","searchValue","replace","searchRegex","RegExp","filteredRows","filter","Object","keys","some","test","toString","useEffect","placeholder","pageSize","checkboxSelection","disableSelectionOnClick","testExclusaoSelectInput","valueGetter","find","o","utils","setDataGridRows","setRecordID","nomeValue","setNomeValue","responseRows","hide","flex","FormCadastro","fontesData","setFontesData","anosData","setAnosData","fonteValue","setFonteValue","anoValue","setAnoValue","responseFontes","responseAnos","fonteId","anoId","fonte_id","ano_id","LookupField","item","variaveisRows","setVariaveisRowsTipos","UpdateDataGridRows","tipoValue","setTipoValue","responseVariaveisTipos","forEach","element","variavel_tipo_nome","insertLookupField","variavel_tipo_id","variavelTipoId","agregacoesTiposView","setAgregacoesTipoView","municipios","setMunicipios","municipioValue","setMunicipioValue","responseTipos","responseMunicipios","tipoId","arMunicipios","push","agregacao_tipo_id","municipio_ids","municipiosData","municipiosFound","itemFind","municipioFind","messages","setMessages","loading","setLoading","indicadores","setIndicadores","btnImportarDisabled","setBtnImportarDisabled","registrosEncontrados","setRegistrosEncontrados","onClick_ConcordoTermos","checked","onChange_LerPlanilha","stopPropagation","preventDefault","arquivo","files","document","getElementById","reader","FileReader","onload","evt","bstr","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_json","header","fatoIndicadoresData","i","length","dimensao","indicador","categoria","tipo_variavel","nome_variavel","tipo_agregacao","nome_agregacao","valor","unidade","fonte","ano","setRegistrosEncontradosText","readAsBinaryString","quantidade","onClick_EnviarPlanilha","errosResponse","parse","errorType","map","linha","campo","records_count","accept","disabled","Dialog","disableBackdropClick","DialogTitle","data-bs-dismiss","upDateRows","dimensoesRows","indicadoresRows","categoriasRows","agregacoesTiposRows","anosRows","setDimensoes","setCategorias","setAgregacoesTipos","setAnos","btnExcluirDisabled","setBtnExcluirDisabled","dimensoes","dimensaoValue","setDimensaoValue","indicadorValue","setIndicadorValue","categorias","categoriaValue","setCategoriaValue","agregacoesTipos","agregacaoTipoValue","setAgregacaoTipoValue","anos","onClick_ConfirmaExclusao","onClick_Excluir","JSONDelete","dimensao_id","indicador_id","categoria_id","inputSelect","showMessage","dialog","bootstrap","innerText","show","multi","FormSelectInputTemp","JSONData","ReportTitle","ShowLabel","arrData","CSV","index","slice","fileName","uri","escape","link","createElement","download","appendChild","click","removeChild","loadData","visible","data_grid_rows","JSONExport","filterValues","JSONToCSVConvertor","municipioStyle","fillOpacity","color","weight","content","setContent","categoriasFilterValue","setCategoriasFilterValue","variaveisFilterValue","setVariaveisFilterValue","anosFilterValue","setAnosFilterValue","variaveisFilterData","setVariaveisFilterData","anosFilterData","setAnosFilterData","onCategoriasFilterValueChange","setGeoJSON","variaveis","valuesVariaveis","agregacoes","valuesAgregacoes","query","unidade_id","tipo_variavel_id","tipo_agregacao_id","join","bodyData","buildBodyData","onVariaveisFilterValueChange","onAnosFilterValueChange","table_data_id","table_join","table_join_id","table_join_name","select_where","geoJSON","legenda","setLegenda","onEachFeatureClick","agregacao","layer","properties","contorno_estados","on","dataContent","categoria_nome","variavel_nome","agregacao_nome","fillColor","background_color","MyComponent","useMap","getCenter","cssLabel","cssFilter","showAlertMessage","dataQuery","GeoJSON","geoson","onEachFeature","backgroundColor","geoson_legenda","color_faixa_1","max_faixa_1","color_faixa_2","max_faixa_2","color_faixa_3","max_faixa_3","color_faixa_4","max_faixa_4","color_faixa_5","max_faixa_5","MapContainer","zoom","center","DialogCartograma","dimensoesResponse","setDimensoesFilterData","getDimensoes","planilhaVisible","setPlanilhaVisible","cartogramaVisible","setCartogramaVisible","dimensoesFilterData","indicadoresFilterData","setIndicadoresFilterData","categoriasFilterData","setCategoriasFilterData","variaveisTipoFilterData","setVariaveisTipoFilterData","agregacoesTipoFilterData","setAgregacoesTipoFilterData","agregacoesFilterData","setAgregacoesFilterData","unidadesFilterData","setUnidadesFilterData","fontesFilterData","setFontesFilterData","dimensoesFilterValue","setDimensoesFilterValue","indicadoresFilterValue","setIndicadoresFilterValue","variaveisTipoFilterValue","setVariaveisTipoFilterValue","agregacoesTipoFilterValue","setAgregacoesTipoFilterValue","agregacoesFilterValue","setAgregacoesFilterValue","unidadesFilterValue","setUnidadesFilterValue","fontesFilterValue","setFontesFilterValue","dimensoesQuery","setDimensoesQuery","indicadoresQuery","setIndicadoresQuery","categoriasQuery","setCategoriasQuery","variaveisTipoQuery","setVariaveisTipoQuery","variaveisQuery","setVariaveisQuery","agregacoesTipoQuery","setAgregacoesTipoQuery","unidadesQuery","setUnidadesQuery","fontesQuery","setFontesQuery","anosQuery","setAnosQuery","setDataQuery","onDimensoesFilterValueChange","onIndicadoresFilterValueChange","resetResults","onUnidadesFilterValueChange","onVariaveisTipoFilterValueChange","onFontesFilterValueChange","onAgregacoesTipoFilterValueChange","onAgregacoesFilterValueChange","btnCartogramaOnClick","btnPlanilhaOnClick","RenderTitle","tabela","features","exact","path","component","Home","Dimensao","Indicador","Categoria","Unidade","Fonte","Nota","VariavelTipo","Variavel","AgregacaoTipo","Agregacao","DadosImportacao","DadosExclusao","ConsultaDimensoesAgregaçõesTerritoriais","ConsultaDimensoesCondiçõesIndicadores","from","Routes","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","catch","ReactDOM","render","origin","addEventListener","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.80edcd6d.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './Header.css'\n\nexport default () =>\n    <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark\" style={{ height: \"10vh\" }}>\n        <a className=\"ps-4 navbar-brand\" href=\"#\">PlaGeSSAN Área Restrita</a>\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li className=\"nav-item dropdown\">\n                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Cadastros</a>\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                        <Link className=\"dropdown-item\" to=\"/admin/cadastro/dimensao\">Dimensões</Link>\n                        <Link className=\"dropdown-item\" to=\"/admin/cadastro/indicador\">Indicadores</Link>\n                        <Link className=\"dropdown-item\" to=\"/admin/cadastro/categoria\">Categoria</Link>\n                        <Link className=\"dropdown-item\" to=\"/admin/cadastro/unidade\">Unidade</Link>\n                        <Link className=\"dropdown-item\" to=\"/admin/cadastro/fonte\">Fonte</Link>\n                        <Link className=\"dropdown-item\" to=\"/admin/cadastro/nota\">Notas</Link>\n                        <Link className=\"dropdown-item\" to=\"/admin/cadastro/variavel_tipo\">Tipos de Variáveis</Link>\n                        <Link className=\"dropdown-item\" to=\"/admin/cadastro/variavel\">Variável</Link>\n                        <Link className=\"dropdown-item\" to=\"/admin/cadastro/agregacao_tipo\">Tipos de Agregações</Link>\n                        <Link className=\"dropdown-item\" to=\"/admin/cadastro/agregacao\">Agregações</Link>\n                    </ul>\n                </li>\n\n                <li className=\"nav-item dropdown\">\n                    <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">Dados</a>\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                        <Link className=\"dropdown-item\" to=\"/admin/dados/importacao\">Importação de indicadores</Link>\n                        <Link className=\"dropdown-item\" to=\"/admin/dados/exclusao\">Exclusão de indicadores</Link>\n                        <hr />\n                        <Link className=\"dropdown-item\" to=\"/admin/dados/consulta_dimensoes_agregacoes_territoriais\">Consulta de Dimensões/Agregações Territoriais</Link>\n                        <Link className=\"dropdown-item\" to=\"/admin/dados/consulta_dimensoes_condicoes_indicadores\">Consulta de Dimensões/Condições Indicadores</Link>\n                    </ul>\n                </li>\n\n            </ul>\n            <form className=\"d-flex\">\n                <button className=\"btn btn-link\" type=\"submit\">{\"{Auth.FullName}\"}</button>\n            </form>\n        </div>\n    </nav >","import './Main.css'\nimport React from 'react'\nimport Header from './Header'\nimport Footer from './Footer'\n\n\nconst MainContainerConsulta = (props) => {\n    const css = props.css + \" container-fluid\"\n\n    return <React.Fragment>\n        <Header />\n        <main className=\"container-fluid m-0 p-0\">\n            {props.children}\n        </main>\n    </React.Fragment>\n}\n\nconst MainContainerAreaRestrita = (props) => {\n    return <React.Fragment>\n        <Header />\n        <main className=\"container-fluid px-3 pt-3\">\n            <div className={'p-3'}>\n                {props.children}\n            </div>\n        </main>\n    </React.Fragment>\n}\n\nexport default props => {\n    return <React.Fragment>\n        <Header />\n        <main className=\"container-fluid px-3 pt-3\">\n            <div className={'p-3'}>\n                {props.children}\n            </div>\n        </main>\n    </React.Fragment>\n}\n\nexport { MainContainerConsulta, MainContainerAreaRestrita }","import React from 'react'\nimport Main from '../template/Main'\n\n\nexport default () => {\n    const ambiente = () => <p className=\"text-danger\"><strong>Ambiente:</strong>: {process.env.NODE_ENV}</p>\n\n    return <Main icon=\"home\" title=\"Início\"\n        subtitle=\"Segundo Projeto do capítulo de React.\">\n        <div className='display-4'>Olá, seja bem-vindo!</div>\n        <hr />\n        <div className=\"mb-0\">Esta é a interface administrativa do Sistema de Indicadores do PlaGeSSAN</div>\n        <div className=\"mb-0 mt-4\">{ambiente()} </div>\n    </Main>\n}","const apiURL = () => {\r\n    const currentURL = window.location.href\r\n    let API_URL = process.env.REACT_APP_API_EXTERNAL\r\n    if (currentURL.search('localhost') > 0) API_URL = process.env.REACT_APP_API_LOCAL\r\n    return API_URL\r\n}\r\n\r\nconst getDataSource = async (URL, method = \"GET\") => {\r\n    try {\r\n        const response = await fetch(apiURL() + URL, {\r\n            method: method,\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        })\r\n        const data = await response.json()\r\n        // if (response.status == 405) throw new Error('Falha de conexão com o backend, comunique o suporte.')\r\n\r\n        if (response.status != 200) throw new Error(data.error)\r\n        return {\r\n            isOk: true,\r\n            data: data\r\n        }\r\n    } catch (e) {\r\n\r\n        console.log(e.TypeError)\r\n        //console.log(e.status)\r\n\r\n        console.log(e)\r\n\r\n        console.log(e.message)\r\n        return {\r\n            isOk: false,\r\n            data: [],\r\n            message: e.message\r\n        };\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst putData = async (URL, key, values) => {\r\n    try {\r\n        const response = await fetch(apiURL() + URL + '/' + key, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(values)\r\n        });\r\n        const data = await response.json();\r\n        if (response.status != 200) throw new Error(data.error);\r\n        return {\r\n            isOk: true,\r\n            data: data\r\n        }\r\n    } catch (e) {\r\n        console.log(e.message)\r\n        return {\r\n            isOk: false,\r\n            data: [],\r\n            message: e.message\r\n        };\r\n    }\r\n}\r\n\r\nconst postData = async (URL, values) => {\r\n    try {\r\n        const response = await fetch(apiURL() + URL, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(values)\r\n        });\r\n        const data = await response.json();\r\n        if (response.status != 200) throw new Error(data.error);\r\n        return {\r\n            isOk: true,\r\n            data: data\r\n        }\r\n    } catch (e) {\r\n        return {\r\n            isOk: false,\r\n            data: [],\r\n            message: e.message,\r\n        };\r\n    }\r\n}\r\n\r\nconst deleteDataByKey = async (URL, key) => {\r\n    try {\r\n        const response = await fetch(apiURL() + URL + '/' + key, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            //body: JSON.stringify(values)\r\n        });\r\n        const data = await response.json();\r\n        if (response.status != 200) throw new Error(data.error);\r\n        return {\r\n            isOk: true,\r\n            data: data\r\n        }\r\n    } catch (e) {\r\n        console.log(e.message)\r\n        return {\r\n            isOk: false,\r\n            data: [],\r\n            message: e.message\r\n        };\r\n    }\r\n}\r\n\r\nconst deleteDataByJSON = async (URL, values) => {\r\n    try {\r\n        const response = await fetch(apiURL() + URL, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(values)\r\n        });\r\n        const data = await response.json();\r\n        if (response.status != 200) throw new Error(data.error);\r\n        return {\r\n            isOk: true,\r\n            data: data\r\n        }\r\n    } catch (e) {\r\n        console.log(e.message)\r\n        return {\r\n            isOk: false,\r\n            data: [],\r\n            message: e.message\r\n        };\r\n    }\r\n}\r\n\r\nexport {\r\n    getDataSource,\r\n    putData,\r\n    postData,\r\n    deleteDataByKey,\r\n    deleteDataByJSON\r\n}","import React, { useState } from 'react'\r\n\r\nimport Box from '@mui/material/Box';\r\nimport Modal from '@mui/material/Modal'\r\nimport Alert from '@mui/material/Alert'\r\nimport Collapse from '@mui/material/Collapse'\r\nimport { putData, postData } from '../../api/datasource'\r\n\r\nexport default (props) => {\r\n  const style = {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 600,\r\n    bgcolor: 'background.paper',\r\n    border: '2px solid #000',\r\n    boxShadow: 24,\r\n    p: 4,\r\n  };\r\n\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [errorMessageOpen, setErrorMessageOpen] = useState(false);\r\n\r\n  const OnClickCancelar = function () {\r\n    props.setFormOpen(false)\r\n    setErrorMessageOpen(false)\r\n    setErrorMessage(\"\")\r\n  }\r\n  const OnClickSalvar = async function () {\r\n\r\n    const data = await props.getData()\r\n    console.log(data)\r\n\r\n    let response\r\n    if (props.recordID === false) {\r\n      console.log(\"InsertData\")\r\n      response = await postData(props.dataURL, data)\r\n    } else {\r\n      console.log(\"UpdateData\")\r\n      response = await putData(props.dataURL, props.recordID, data)\r\n    }\r\n\r\n    if (response.isOk === false) {\r\n      setErrorMessageOpen(true)\r\n      setErrorMessage(response.message)\r\n    }\r\n    if (response.isOk === true) {\r\n      setErrorMessageOpen(false)\r\n      setErrorMessage(\"\")\r\n      props.getUpdateDataGridRows()\r\n      props.setFormOpen(false)\r\n\r\n\r\n      if (props.recordID === false) {\r\n        alert('Inclusão realizada com sucesso.');\r\n      } else {\r\n        alert('Alteração realizada com sucesso.');\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Modal open={props.formOpen}>\r\n      <Box sx={style}>\r\n\r\n        <div className=\"d-flex justify-content-between\">\r\n          <span className=\"fw-bold\">{props.title}</span>\r\n        </div>\r\n        <hr />\r\n        {props.children}\r\n        <hr />\r\n\r\n        <Collapse in={errorMessageOpen} >\r\n          <Alert severity=\"error\">{errorMessage}</Alert>\r\n        </Collapse>\r\n\r\n        <div className=\"d-flex justify-content-end\">\r\n          <div className=\"pe-3\"><button type=\"button\" className=\"btn btn-success\" onClick={OnClickSalvar}>Salvar</button></div>\r\n          <div className=\"\"><button type=\"button\" className=\"btn btn-danger\" onClick={OnClickCancelar} >Cancelar</button></div>\r\n        </div>\r\n      </Box>\r\n    </Modal>\r\n  );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { getDataSource, deleteDataByKey, putData, postData } from '../../../api/datasource'\r\n//import { DataGrid, } from \"@material-ui/data-grid\";\r\nimport { DataGrid } from '@mui/x-data-grid';\r\n\r\nimport TextField from '@mui/material/TextField'\r\nimport Select from 'react-select';\r\n\r\n\r\nexport default class Utils {\r\n    constructor(URL, data) { }\r\n\r\n    LookupField(data, field, headerName) {\r\n        //console.log('LookupField')\r\n        return {\r\n            field: field,\r\n            headerName: headerName,\r\n            width: 250,\r\n            valueGetter: (params) => {\r\n                let nome;\r\n                data.find(o => {\r\n                    if (params.row[field] == o.id) nome = o.nome\r\n                });\r\n                return nome\r\n            }\r\n        }\r\n    }\r\n\r\n    DeleteButton = (dataURL, updateRows, checkDelete = false) => {\r\n        return {\r\n            field: 'delete',\r\n            headerName: ' ',\r\n            width: 60,\r\n            renderCell: (params) => {\r\n                return (\r\n                    <button className=\"btn\" type=\"button\" onClick={async () => {\r\n                        if (checkDelete === true && params.row.onlyview_label === 'SIM') {\r\n                            alert(\"Esse registro não pode ser excluído.\")\r\n                            return\r\n                        }\r\n\r\n                        if (confirm(\"Tem certeza que deseja excluir o registro selecionado?\")) {\r\n                            let result = await deleteDataByKey(dataURL, params.row.id)\r\n                            if (!result.isOk) {\r\n                                alert(result.message)\r\n                                return\r\n                            }\r\n                            updateRows()\r\n                            alert('Exclusão realizada com sucesso.')\r\n                        }\r\n                    }}><i className=\"text-dark fas fa-times\"></i>\r\n                    </button>\r\n                )\r\n            },\r\n            disableClickEventBubbling: true,\r\n        }\r\n    }\r\n\r\n    FormSelectInput = (Label, onChange, value, options) => {\r\n        return <div className=\"d-flex\">\r\n            <div className=\"p-1 flex-fill\">\r\n                <label className=\"p-0 m-0\">{Label}</label>\r\n                <Select\r\n                    //id=\"inputSelect\"\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    isMulti={false}\r\n                    //isClearable={true}\r\n                    isSearchable={true}\r\n                    options={options}\r\n                    getOptionLabel={option => option.nome}\r\n                    getOptionValue={option => option.id}\r\n                />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    FormSelectInputMulti = (Label, onChange, value, options) => {\r\n        return <div className=\"d-flex\">\r\n            <div className=\"p-1 flex-fill\">\r\n                <label className=\"p-0 m-0\">{Label}</label>\r\n                <Select\r\n                    //id=\"inputSelect\"\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    isMulti={true}\r\n                    //isClearable={true}\r\n                    isSearchable={true}\r\n                    options={options}\r\n                    getOptionLabel={option => option.uf_nome}\r\n                    getOptionValue={option => option.municipio_codigo_ibge}\r\n                />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    FormTextInput = (Label, onChange, value) => {\r\n        return <div className=\"d-flex\">\r\n            <div className=\"p-1 flex-fill\">\r\n                <label className=\"p-0 m-0\">{Label}</label>\r\n                <TextField\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    id=\"inputNome\"\r\n                    value={value} onChange={e => onChange(e.target.value)} fullWidth />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    DataGridHeader = (title, dataGridRows, columns, onClickAdd) => {\r\n        const [rows, setRows] = React.useState(dataGridRows);\r\n\r\n        const [pesquisarValue, setPesquisarValue] = React.useState('');\r\n\r\n        const requestSearch = (searchValue) => {\r\n            const value = searchValue.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\r\n            setPesquisarValue(searchValue);\r\n            const searchRegex = new RegExp(value, 'i');\r\n\r\n            console.log(\"oi\")\r\n            console.log(dataGridRows)\r\n\r\n            const filteredRows = dataGridRows.filter((row) => {\r\n                return Object.keys(row).some((field) => {\r\n                    return searchRegex.test(row[field].toString());\r\n                });\r\n            });\r\n\r\n            setRows(filteredRows);\r\n        };\r\n\r\n        React.useEffect(() => {\r\n            setRows(dataGridRows);\r\n        }, [dataGridRows]);\r\n\r\n        return (\r\n            <div>\r\n\r\n\r\n                <div className=\"d-flex bd-highlight p-0 m-0 \">\r\n                    <div className=\"align-self-center h3 p-0 pt-2\">{title}</div>\r\n                    <div className=\"align-self-center ms-4 p-0\"><button className=\"btn\" type=\"button\" onClick={onClickAdd} >\r\n                        <i className=\"text-primary fas fa-plus-circle fa-2x m-0 \"></i>\r\n                    </button></div>\r\n                    <div className=\"ms-auto bd-highlight\">\r\n                        <div className=\"input-group p-0\">\r\n                            <span className=\"input-group-text\"><i className=\"align-self-center fas fa-search fa-lg \"></i></span>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Buscar\"\r\n                                value={pesquisarValue}\r\n                                onChange={e => {\r\n                                    requestSearch(e.target.value)\r\n                                }}\r\n                            />\r\n                            <span className=\"input-group-append\">\r\n                                <button className=\"input-group-text btn bg-primary text-white\" type=\"button\" onClick={() => {\r\n                                    requestSearch(\"\")\r\n                                }} >\r\n                                    <i className=\"fas fa-times fa-lg m-0\"></i>\r\n                                </button>\r\n\r\n                            </span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <div style={{ height: 600, width: '100%' }}>\r\n                    <DataGrid\r\n                        rows={rows}\r\n                        columns={columns}\r\n                        pageSize={50}\r\n                        checkboxSelection={false}\r\n                        disableSelectionOnClick={true}\r\n                    />\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n\r\n\r\n\r\n    testExclusaoSelectInput = (Label, onChange, value, options) => {\r\n        return <div className=\"d-flex\">\r\n            <div className=\"p-1 flex-fill\">\r\n                <label className=\"p-0 m-0\">{Label}</label>\r\n                <Select\r\n                    //id=\"inputSelect\"\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    isMulti={false}\r\n                    //isClearable={true}\r\n                    isSearchable={true}\r\n                    options={options}\r\n                    getOptionLabel={option => option.uf_nome}\r\n                    getOptionValue={option => option.municipio_codigo_ibge}\r\n                />\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n\r\n\r\n}","const title = 'Cadastro de Dimensões'\r\nconst dataURL = '/cadastro/dimensao'\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { MainContainerAreaRestrita } from '../../../components/template/Main'\r\nimport { getDataSource } from '../../../api/datasource'\r\nimport FormCadastro from '../../../components/template/FormCadastro'\r\nimport Utils from './utils'\r\n\r\nlet utils = new Utils(\"\");\r\n\r\nexport default function () {\r\n    useEffect(() => {\r\n        getUpdateDataGridRows()\r\n    }, []);\r\n\r\n    const [dataGridRows, setDataGridRows] = useState([]);\r\n    const [formOpen, setFormOpen] = useState(false);\r\n    const [recordID, setRecordID] = useState(false);\r\n\r\n    // EDIT: Fields State    \r\n    const [nomeValue, setNomeValue] = useState(\"\");\r\n    const onNomeChange = (value) => { setNomeValue(value) }\r\n\r\n    const getUpdateDataGridRows = async function () {\r\n        const responseRows = await getDataSource(dataURL)\r\n        setDataGridRows(responseRows.data)\r\n    }\r\n\r\n    const getData = async function () {\r\n        return { nome: nomeValue }\r\n    }\r\n\r\n    const onClickAdd = function () {\r\n        setFormOpen(true)\r\n        setRecordID(false)\r\n        setNomeValue(\"\")\r\n    }\r\n\r\n\r\n\r\n    const style = {\r\n        cursor: 'pointer',\r\n    };\r\n\r\n\r\n    const renderEditButton = (params) => {\r\n        return (\r\n            <button className=\"btn\" type=\"button\" onClick={() => {\r\n                setRecordID(params.row.id)\r\n                setNomeValue(params.row.nome)\r\n                setFormOpen(true)\r\n            }}><i className=\"text-dark fas fa-pen\"></i>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID', width: 120, hide: true },\r\n        { field: 'nome', headerName: 'Nome', flex: 1, width: 450 },\r\n        utils.DeleteButton(dataURL, getUpdateDataGridRows),\r\n        { field: 'edit', headerName: ' ', width: 60, renderCell: renderEditButton, disableClickEventBubbling: true, },\r\n    ];\r\n\r\n    return (\r\n        <MainContainerAreaRestrita title={title}>\r\n            {utils.DataGridHeader(title, dataGridRows, columns, onClickAdd)}\r\n\r\n            <FormCadastro\r\n                title={title}\r\n                setFormOpen={setFormOpen}\r\n                formOpen={formOpen}\r\n                width={600}\r\n                recordID={recordID}\r\n                dataURL={dataURL}\r\n                getData={getData}\r\n                getUpdateDataGridRows={getUpdateDataGridRows}\r\n            >\r\n                {utils.FormTextInput('Nome', onNomeChange, nomeValue)}\r\n            </FormCadastro>\r\n        </MainContainerAreaRestrita>\r\n    )\r\n}","const title = 'Cadastro de Indicadores'\r\nconst dataURL = '/cadastro/indicador'\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { MainContainerAreaRestrita } from '../../../components/template/Main'\r\nimport { getDataSource, deleteData, putData, postData } from '../../../api/datasource'\r\nimport FormCadastro from '../../../components/template/FormCadastro'\r\nimport Utils from './utils'\r\nlet utils = new Utils(\"\");\r\n\r\nexport default function () {\r\n    useEffect(() => {\r\n        getUpdateDataGridRows()\r\n    }, []);\r\n\r\n    const [dataGridRows, setDataGridRows] = useState([]);\r\n    const [formOpen, setFormOpen] = useState(false);\r\n    const [recordID, setRecordID] = useState(false);\r\n\r\n    // EDIT: Fields State    \r\n    const [nomeValue, setNomeValue] = useState(\"\");\r\n    const onNomeChange = (value) => { setNomeValue(value) }\r\n\r\n    const getUpdateDataGridRows = async function () {\r\n        const responseRows = await getDataSource(dataURL)\r\n        setDataGridRows(responseRows.data)\r\n    }\r\n\r\n    const getData = async function () {\r\n        return { nome: nomeValue }\r\n    }\r\n\r\n    const onClickAdd = function () {\r\n        setFormOpen(true)\r\n        setRecordID(false)\r\n        setNomeValue(\"\")\r\n    }\r\n\r\n    const renderEditButton = (params) => {\r\n        return (\r\n            <button className=\"btn\" type=\"button\" onClick={() => {\r\n                setRecordID(params.row.id)\r\n                setNomeValue(params.row.nome)\r\n                setFormOpen(true)\r\n            }}><i className=\"text-dark fas fa-pen\"></i>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID', width: 120, hide: true },\r\n        { field: 'nome', headerName: 'Nome', flex: 1, width: 450 },\r\n        utils.DeleteButton(dataURL, getUpdateDataGridRows),\r\n        { field: 'edit', headerName: ' ', width: 60, renderCell: renderEditButton, disableClickEventBubbling: true, },\r\n    ];\r\n\r\n    return (\r\n        <MainContainerAreaRestrita title={title}>\r\n            {utils.DataGridHeader(title, dataGridRows, columns, onClickAdd)}\r\n\r\n            <FormCadastro\r\n                title={title}\r\n                setFormOpen={setFormOpen}\r\n                formOpen={formOpen}\r\n                width={600}\r\n                recordID={recordID}\r\n                dataURL={dataURL}\r\n                getData={getData}\r\n                getUpdateDataGridRows={getUpdateDataGridRows}\r\n            >\r\n                {utils.FormTextInput('Nome', onNomeChange, nomeValue)}\r\n            </FormCadastro>\r\n        </MainContainerAreaRestrita>\r\n    )\r\n}","const title = 'Cadastro de Categorias'\r\nconst dataURL = '/cadastro/categoria'\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { MainContainerAreaRestrita } from '../../../components/template/Main'\r\nimport { getDataSource, deleteData, putData, postData } from '../../../api/datasource'\r\nimport FormCadastro from '../../../components/template/FormCadastro'\r\nimport Utils from './utils'\r\nlet utils = new Utils(\"\");\r\n\r\nexport default function () {\r\n    useEffect(() => {\r\n        getUpdateDataGridRows()\r\n    }, []);\r\n\r\n    const [dataGridRows, setDataGridRows] = useState([]);\r\n    //let [variaveisTipos, setVariaveisTipos] = useState();\r\n    const [formOpen, setFormOpen] = useState(false);\r\n    const [recordID, setRecordID] = useState(false);\r\n\r\n    // EDIT: Fields State\r\n    //const [tipoValue, setTipoValue] = useState(-1);\r\n    const [nomeValue, setNomeValue] = useState(\"\");\r\n    //const onTipoChange = (value) => { setTipoValue(value) }\r\n    const onNomeChange = (value) => { setNomeValue(value) }\r\n\r\n    const getUpdateDataGridRows = async function () {\r\n        // EDIT: Lookup fields first\r\n        //const responseVariaveisTipos = await getDataSource(\"/cadastro/variavel_tipo\")\r\n        //setVariaveisTipos(responseVariaveisTipos.data)\r\n\r\n        const responseRows = await getDataSource(dataURL)\r\n        setDataGridRows(responseRows.data)\r\n    }\r\n\r\n    const getData = async function () {\r\n        return { nome: nomeValue }\r\n    }\r\n\r\n    const onClickAdd = function () {\r\n        setFormOpen(true)\r\n        setRecordID(false)\r\n        setNomeValue(\"\")\r\n    }\r\n\r\n    const renderEditButton = (params) => {\r\n        return (            \r\n            <button className=\"btn\" type=\"button\" onClick={() => {\r\n                setRecordID(params.row.id)\r\n                setNomeValue(params.row.nome)\r\n                setFormOpen(true)\r\n            }}><i className=\"text-dark fas fa-pen\"></i>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID', width: 120, hide: true },\r\n        { field: 'nome', headerName: 'Nome', flex: 1, width: 450 },\r\n        utils.DeleteButton(dataURL, getUpdateDataGridRows),\r\n        { field: 'edit', headerName: ' ', width: 60, renderCell: renderEditButton, disableClickEventBubbling: true, },\r\n    ];\r\n\r\n    return (\r\n        <MainContainerAreaRestrita title={title}>\r\n            {utils.DataGridHeader(title, dataGridRows, columns, onClickAdd)}\r\n\r\n            <FormCadastro\r\n                title={title}\r\n                setFormOpen={setFormOpen}\r\n                formOpen={formOpen}\r\n                width={600}\r\n                recordID={recordID}\r\n                dataURL={dataURL}\r\n                getData={getData}\r\n                getUpdateDataGridRows={getUpdateDataGridRows}\r\n            >\r\n                {utils.FormTextInput('Nome', onNomeChange, nomeValue)}\r\n            </FormCadastro>\r\n        </MainContainerAreaRestrita>\r\n    )\r\n}","const title = 'Cadastro de Unidades'\r\nconst dataURL = '/cadastro/unidade'\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { MainContainerAreaRestrita } from '../../../components/template/Main'\r\nimport { getDataSource } from '../../../api/datasource'\r\nimport FormCadastro from '../../../components/template/FormCadastro'\r\nimport Utils from './utils'\r\nlet utils = new Utils(\"\");\r\n\r\nexport default function () {\r\n    useEffect(() => {\r\n        getUpdateDataGridRows()\r\n    }, []);\r\n\r\n    const [dataGridRows, setDataGridRows] = useState([]);\r\n    //let [variaveisTipos, setVariaveisTipos] = useState();\r\n    const [formOpen, setFormOpen] = useState(false);\r\n    const [recordID, setRecordID] = useState(false);\r\n\r\n    // EDIT: Fields State\r\n    //const [tipoValue, setTipoValue] = useState(-1);\r\n    const [nomeValue, setNomeValue] = useState(\"\");\r\n    //const onTipoChange = (value) => { setTipoValue(value) }\r\n    const onNomeChange = (value) => { setNomeValue(value) }\r\n\r\n    const getUpdateDataGridRows = async function () {\r\n        // EDIT: Lookup fields first\r\n        //const responseVariaveisTipos = await getDataSource(\"/cadastro/variavel_tipo\")\r\n        //setVariaveisTipos(responseVariaveisTipos.data)\r\n\r\n        const responseRows = await getDataSource(dataURL)\r\n        setDataGridRows(responseRows.data)\r\n    }\r\n\r\n    const getData = async function () {\r\n        return { nome: nomeValue }\r\n    }\r\n\r\n    const onClickAdd = function () {\r\n        setFormOpen(true)\r\n        setRecordID(false)\r\n        setNomeValue(\"\")\r\n    }\r\n\r\n    const renderEditButton = (params) => {\r\n        return (\r\n            <button className=\"btn\" type=\"button\" onClick={() => {\r\n                setRecordID(params.row.id)\r\n                setNomeValue(params.row.nome)\r\n                setFormOpen(true)\r\n            }}><i className=\"text-dark fas fa-pen\"></i>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID', width: 120, hide: true },\r\n        { field: 'nome', headerName: 'Nome', flex: 1, width: 450 },\r\n        utils.DeleteButton(dataURL, getUpdateDataGridRows),\r\n        { field: 'edit', headerName: ' ', width: 60, renderCell: renderEditButton, disableClickEventBubbling: true, },\r\n    ];\r\n\r\n    return (\r\n        <MainContainerAreaRestrita title={title}>\r\n            {utils.DataGridHeader(title, dataGridRows, columns, onClickAdd)}\r\n\r\n            <FormCadastro\r\n                title={title}\r\n                setFormOpen={setFormOpen}\r\n                formOpen={formOpen}\r\n                width={600}\r\n                recordID={recordID}\r\n                dataURL={dataURL}\r\n                getData={getData}\r\n                getUpdateDataGridRows={getUpdateDataGridRows}\r\n            >\r\n                {utils.FormTextInput('Nome', onNomeChange, nomeValue)}\r\n            </FormCadastro>\r\n        </MainContainerAreaRestrita>\r\n    )\r\n}","const title = 'Cadastro de Fontes'\r\nconst dataURL = '/cadastro/fonte'\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { MainContainerAreaRestrita } from '../../../components/template/Main'\r\nimport { getDataSource } from '../../../api/datasource'\r\nimport FormCadastro from '../../../components/template/FormCadastro'\r\nimport Utils from './utils'\r\nlet utils = new Utils(\"\");\r\n\r\nexport default function () {\r\n    useEffect(() => {\r\n        getUpdateDataGridRows()\r\n    }, []);\r\n\r\n    const [dataGridRows, setDataGridRows] = useState([]);\r\n    const [formOpen, setFormOpen] = useState(false);\r\n    const [recordID, setRecordID] = useState(false);\r\n\r\n    // EDIT: Fields State    \r\n    const [nomeValue, setNomeValue] = useState(\"\");\r\n    const onNomeChange = (value) => { setNomeValue(value) }\r\n\r\n    const getUpdateDataGridRows = async function () {\r\n        const responseRows = await getDataSource(dataURL)\r\n        setDataGridRows(responseRows.data)\r\n    }\r\n\r\n    const getData = async function () {\r\n        return { nome: nomeValue }\r\n    }\r\n\r\n    const onClickAdd = function () {\r\n        setFormOpen(true)\r\n        setRecordID(false)\r\n        setNomeValue(\"\")\r\n    }\r\n\r\n    const renderEditButton = (params) => {\r\n        return (\r\n            <button className=\"btn\" type=\"button\" onClick={() => {\r\n                setRecordID(params.row.id)\r\n                setNomeValue(params.row.nome)\r\n                setFormOpen(true)\r\n            }}><i className=\"text-dark fas fa-pen\"></i>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID', width: 120, hide: true },\r\n        { field: 'nome', headerName: 'Nome', flex: 1, width: 450 },\r\n        utils.DeleteButton(dataURL, getUpdateDataGridRows),\r\n        { field: 'edit', headerName: ' ', width: 60, renderCell: renderEditButton, disableClickEventBubbling: true, },\r\n    ];\r\n\r\n    return (\r\n        <MainContainerAreaRestrita title={title}>\r\n            {utils.DataGridHeader(title, dataGridRows, columns, onClickAdd)}\r\n\r\n            <FormCadastro\r\n                title={title}\r\n                setFormOpen={setFormOpen}\r\n                formOpen={formOpen}\r\n                width={600}\r\n                recordID={recordID}\r\n                dataURL={dataURL}\r\n                getData={getData}\r\n                getUpdateDataGridRows={getUpdateDataGridRows}\r\n            >\r\n                {utils.FormTextInput('Nome', onNomeChange, nomeValue)}\r\n            </FormCadastro>\r\n        </MainContainerAreaRestrita>\r\n    )\r\n}","const title = 'Cadastro de Notas'\r\nconst dataURL = '/cadastro/nota'\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { MainContainerAreaRestrita } from '../../../components/template/Main'\r\nimport { getDataSource, deleteData, putData, postData } from '../../../api/datasource'\r\nimport FormCadastro from '../../../components/template/FormCadastro'\r\nimport Utils from './utils'\r\nlet utils = new Utils(\"/cadastro/variavel_tipo\");\r\n\r\nexport default function () {\r\n    useEffect(() => {\r\n        getUpdateDataGridRows()\r\n    }, []);\r\n\r\n    const [dataGridRows, setDataGridRows] = useState([]);\r\n    let [fontesData, setFontesData] = useState();\r\n    let [anosData, setAnosData] = useState();\r\n    const [formOpen, setFormOpen] = useState(false);\r\n    const [recordID, setRecordID] = useState(false);\r\n\r\n    // EDIT: Fields State\r\n    const [fonteValue, setFonteValue] = useState(-1);\r\n    const [anoValue, setAnoValue] = useState(-1);\r\n    const [nomeValue, setNomeValue] = useState(\"\");\r\n    const onFonteChange = (value) => { setFonteValue(value) }\r\n    const onAnoChange = (value) => { setAnoValue(value) }\r\n    const onNomeChange = (value) => { setNomeValue(value) }\r\n\r\n    const getUpdateDataGridRows = async function () {\r\n        // EDIT: Lookup fields first\r\n        const responseFontes = await getDataSource(\"/cadastro/fonte\")\r\n        setFontesData(responseFontes.data)\r\n\r\n        const responseAnos = await getDataSource(\"/cadastro/ano\")\r\n        setAnosData(responseAnos.data)\r\n\r\n        const responseRows = await getDataSource(dataURL)\r\n        setDataGridRows(responseRows.data)\r\n    }\r\n\r\n    const getData = async function () {\r\n        var fonteId = typeof fonteValue != \"undefined\" ? fonteValue.id : \"\";\r\n        var anoId = typeof anoValue != \"undefined\" ? anoValue.id : \"\";\r\n        return { nome: nomeValue, fonte_id: fonteId, ano_id: anoId }\r\n    }\r\n\r\n    const onClickAdd = function () {\r\n        setFormOpen(true)\r\n        setRecordID(false)\r\n        setFonteValue(fontesData[-1])\r\n        setAnoValue(anosData[-1])\r\n        setNomeValue(\"\")\r\n    }\r\n\r\n    const renderEditButton = (params) => {\r\n        return (\r\n            <button className=\"btn\" type=\"button\" onClick={async () => {\r\n                setRecordID(params.row.id)\r\n\r\n                setFonteValue(fontesData.find(item => item.id === params.row.fonte_id))\r\n                setAnoValue(anosData.find(item => item.id === params.row.ano_id))\r\n\r\n                setNomeValue(params.row.nome)\r\n                setFormOpen(true)\r\n            }}><i className=\"text-dark fas fa-pen\"></i>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID', width: 120, hide: true },\r\n        utils.LookupField(fontesData, 'fonte_id', 'Fonte'),\r\n        utils.LookupField(anosData, 'ano_id', 'Ano'),\r\n        { field: 'nome', headerName: 'Nome', flex: 1, width: 450 },\r\n        utils.DeleteButton(dataURL, getUpdateDataGridRows),\r\n        //utils.EditButton(dataURL, setupFieldsEdit),\r\n        { field: 'edit', headerName: ' ', width: 60, renderCell: renderEditButton, disableClickEventBubbling: true, },\r\n    ];\r\n\r\n    return (\r\n        <MainContainerAreaRestrita title={title}>\r\n            {utils.DataGridHeader(title, dataGridRows, columns, onClickAdd)}\r\n\r\n            <FormCadastro\r\n                title={title}\r\n                setFormOpen={setFormOpen}\r\n                formOpen={formOpen}\r\n                width={600}\r\n                recordID={recordID}\r\n                dataURL={dataURL}\r\n                getData={getData}\r\n                getUpdateDataGridRows={getUpdateDataGridRows}\r\n            >\r\n                {utils.FormSelectInput('Fonte', onFonteChange, fonteValue, fontesData)}\r\n                {utils.FormSelectInput('Ano', onAnoChange, anoValue, anosData)}\r\n                {utils.FormTextInput('Nome', onNomeChange, nomeValue)}\r\n            </FormCadastro>\r\n        </MainContainerAreaRestrita>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useRef, useCallback, useEffect } from 'react';\r\n// import Main from '../../../components/template/Main'\r\n// import { DataGrid } from \"@material-ui/data-grid\";\r\n// import Fab from '@material-ui/core/Fab';\r\n// import AddIcon from '@material-ui/icons/Add';\r\n// import EditIcon from '@material-ui/icons/Edit';\r\n// import FormCadastro from '../../../components/template/FormCadastro'\r\n// import TextField from '@material-ui/core/TextField';\r\n// import { getDataSource } from '../../../api/datasource'\r\n\r\n\r\n// const title = 'Cadastro de Notas'\r\n// const dataURL = '/cadastro/nota'\r\n\r\n// export default function () {\r\n//     useEffect(() => {\r\n//         getUpdateDataGridRows()\r\n//     }, []);\r\n\r\n//     const [dataGridRows, setDataGridRows] = useState([]);\r\n//     const [formOpen, setFormOpen] = useState(false);\r\n//     const [data, setData] = useState({});\r\n\r\n//     const setFormClose = function () { setFormOpen(false) }\r\n//     const getUpdateDataGridRows = async function () {\r\n//         const response = await getDataSource(dataURL)\r\n//         setDataGridRows(response.data)\r\n//     }\r\n\r\n//     const onClickAdd = function () {\r\n//         setFormOpen(true)\r\n//         setData({ id: 0 })\r\n//     }\r\n\r\n//     const renderEditButton = (params) => {\r\n//         return (\r\n//             <Fab\r\n//                 size=\"small\"\r\n//                 aria-label=\"edit\"\r\n//                 onClick={() => {\r\n//                     console.log('ID: ' + params.row.id)\r\n//                     setData(params.row)\r\n//                     setFormOpen(true)\r\n//                 }} ><EditIcon />\r\n//             </Fab>\r\n//         )\r\n//     }\r\n\r\n//     const columns = [\r\n//         { field: 'edit', headerName: ' ', width: 150, renderCell: renderEditButton, disableClickEventBubbling: true, },\r\n//         //{ field: 'id', headerName: 'ID', width: 120 },\r\n\r\n//         { field: 'fonte_id', headerName: 'Fonte', width: 120 },\r\n//         { field: 'ano_id', headerName: 'Ano', width: 120 },\r\n\r\n//         { field: 'nome', headerName: 'Nome', width: 150, editable: true }\r\n//     ];\r\n\r\n//     return (\r\n//         <Main title={title}>\r\n//             <div className=\"d-flex flex-row\">\r\n//                 <div className=\"p-2 d-flex align-items-end\"><h3>{title}</h3></div>\r\n//                 <div className=\"p-2 d-flex align-items-end\"><div className=\"col-sm-3\"><Fab color=\"primary\" aria-label=\"add\" onClick={onClickAdd} ><AddIcon /></Fab></div></div>\r\n//             </div>\r\n//             <hr />\r\n\r\n//             <div style={{ height: 400, width: '100%' }}>\r\n//                 <DataGrid\r\n//                     rows={dataGridRows}\r\n//                     columns={columns}\r\n//                     pageSize={50}\r\n//                     checkboxSelection={false}\r\n//                     disableSelectionOnClick={true}\r\n//                 />\r\n//             </div>\r\n//             <FormCadastro\r\n//                 title={title}\r\n//                 open={formOpen}\r\n//                 close={setFormClose}\r\n//                 data={data}\r\n//                 dataURL={dataURL}\r\n//                 refreshData={getUpdateDataGridRows}\r\n\r\n//             //teste={teste}\r\n//             >\r\n//                 {/* //<TextField id=\"ano_id\" label=\"Ano\" value={data.nome} />                 */}\r\n//                 <TextField id=\"nome\" label=\"Nome\" value={data.nome} />                \r\n//             </FormCadastro>\r\n//         </Main>\r\n//     )\r\n// }","const title = 'Cadastro de Tipos de Variáveis'\r\nconst dataURL = '/cadastro/variavel_tipo'\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { MainContainerAreaRestrita } from '../../../components/template/Main'\r\nimport { getDataSource, deleteData, putData, postData } from '../../../api/datasource'\r\nimport FormCadastro from '../../../components/template/FormCadastro'\r\nimport Utils from './utils'\r\nlet utils = new Utils(\"\");\r\n\r\nexport default function () {\r\n    useEffect(() => {\r\n        getUpdateDataGridRows()\r\n    }, []);\r\n\r\n    const [dataGridRows, setDataGridRows] = useState([]);\r\n    const [formOpen, setFormOpen] = useState(false);\r\n    const [recordID, setRecordID] = useState(false);\r\n\r\n    // EDIT: Fields State    \r\n    const [nomeValue, setNomeValue] = useState(\"\");\r\n    const onNomeChange = (value) => { setNomeValue(value) }\r\n\r\n    const getUpdateDataGridRows = async function () {\r\n        const responseRows = await getDataSource(dataURL)\r\n        setDataGridRows(responseRows.data)\r\n    }\r\n\r\n    const getData = async function () {\r\n        return { nome: nomeValue }\r\n    }\r\n\r\n    const onClickAdd = function () {\r\n        setFormOpen(true)\r\n        setRecordID(false)\r\n        setNomeValue(\"\")\r\n    }\r\n\r\n    const renderEditButton = (params) => {\r\n        return (\r\n            <button className=\"btn\" type=\"button\" onClick={() => {\r\n                setRecordID(params.row.id)\r\n                setNomeValue(params.row.nome)\r\n                setFormOpen(true)\r\n            }}><i className=\"text-dark fas fa-pen\"></i>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID', width: 120, hide: true },\r\n        { field: 'nome', headerName: 'Nome', flex: 1, width: 450 },\r\n        utils.DeleteButton(dataURL, getUpdateDataGridRows),\r\n        { field: 'edit', headerName: ' ', width: 60, renderCell: renderEditButton, disableClickEventBubbling: true, },\r\n    ];\r\n\r\n    return (\r\n        <MainContainerAreaRestrita title={title}>\r\n            {utils.DataGridHeader(title, dataGridRows, columns, onClickAdd)}\r\n\r\n            <FormCadastro\r\n                title={title}\r\n                setFormOpen={setFormOpen}\r\n                formOpen={formOpen}\r\n                width={600}\r\n                recordID={recordID}\r\n                dataURL={dataURL}\r\n                getData={getData}\r\n                getUpdateDataGridRows={getUpdateDataGridRows}\r\n            >\r\n                {utils.FormTextInput('Nome', onNomeChange, nomeValue)}\r\n            </FormCadastro>\r\n        </MainContainerAreaRestrita>\r\n    )\r\n}","const title = 'Cadastro de Variáveis'\r\nconst dataURL = '/cadastro/variavel'\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { MainContainerAreaRestrita } from '../../../components/template/Main'\r\nimport { getDataSource, deleteData, putData, postData } from '../../../api/datasource'\r\nimport FormCadastro from '../../../components/template/FormCadastro'\r\nimport Utils from './utils'\r\nlet utils = new Utils(\"/cadastro/variavel_tipo\");\r\n\r\nexport default function () {\r\n    const [dataGridRows, setDataGridRows] = useState([]);\r\n    const [variaveisRows, setVariaveisRowsTipos] = useState([]);\r\n\r\n    useEffect(() => {\r\n        UpdateDataGridRows()\r\n    }, []);\r\n\r\n\r\n    const [formOpen, setFormOpen] = useState(false);\r\n    const [recordID, setRecordID] = useState(false);\r\n\r\n    // EDIT: Fields State\r\n    const [tipoValue, setTipoValue] = useState(-1);\r\n    const [nomeValue, setNomeValue] = useState(\"\");\r\n    const onTipoChange = (value) => { setTipoValue(value) }\r\n    const onNomeChange = (value) => { setNomeValue(value) }\r\n\r\n    const UpdateDataGridRows = async function () {\r\n        // EDIT: Lookup fields first\r\n        const responseVariaveisTipos = await getDataSource(\"/cadastro/variavel_tipo\")\r\n\r\n        setVariaveisRowsTipos(responseVariaveisTipos.data)\r\n\r\n\r\n        const dataGridRows = await getDataSource(dataURL)\r\n\r\n\r\n        dataGridRows.data.forEach(element => {\r\n            //console.log(element.variavel_tipo_id)\r\n            element.variavel_tipo_nome = insertLookupField(element.variavel_tipo_id)\r\n        });\r\n\r\n        //console.log(dataGridRows.data)\r\n        setDataGridRows(dataGridRows.data)\r\n    }\r\n\r\n\r\n    //var insertLookupField = (dataGridRows, lookupRows, dataGridRowId, lookupRowId, lookupRowValue, newFieldName) => {\r\n    var insertLookupField = (params) => {\r\n        let nome;\r\n        //console.log(variaveisRows)\r\n\r\n        variaveisRows.find(o => {\r\n            console.log(\"oi\")\r\n            if (params == o.id) nome = o.nome\r\n        });\r\n        return nome\r\n\r\n\r\n        // let nome;\r\n        // responseVariaveisTipos.data.find(o => {\r\n        //     if (params.row[field] == o.id) nome = o.nome\r\n        // });\r\n        return params\r\n    }\r\n\r\n\r\n    const getData = async function () {\r\n        var variavelTipoId = typeof tipoValue != \"undefined\" ? tipoValue.id : \"\";\r\n        return { nome: nomeValue, variavel_tipo_id: variavelTipoId }\r\n    }\r\n\r\n    const onClickAdd = function () {\r\n        setFormOpen(true)\r\n        setRecordID(false)\r\n        setTipoValue(variaveisRows[-1])\r\n        setNomeValue(\"\")\r\n    }\r\n\r\n    const renderEditButton = (params) => {\r\n        return (\r\n            <button className=\"btn\" type=\"button\" onClick={() => {\r\n                setRecordID(params.row.id)\r\n                setTipoValue(variaveisRows.find(item => item.id === params.row.variavel_tipo_id))\r\n                setNomeValue(params.row.nome)\r\n                setFormOpen(true)\r\n            }}><i className=\"text-dark fas fa-pen\"></i>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID', width: 120, hide: true },\r\n        utils.LookupField(variaveisRows, 'variavel_tipo_id', 'Tipo'),\r\n        //{ field: 'variavel_tipo_id', headerName: 'Tipo', flex: 1, width: 450 },\r\n        //{ field: 'variavel_tipo_nome', headerName: 'Tipo', flex: 1, width: 450 },\r\n        { field: 'nome', headerName: 'Nome', flex: 1, width: 450 },\r\n        utils.DeleteButton(dataURL, UpdateDataGridRows),\r\n        //utils.EditButton(dataURL, setupFieldsEdit),\r\n        { field: 'edit', headerName: ' ', width: 60, renderCell: renderEditButton, disableClickEventBubbling: true, },\r\n    ];\r\n\r\n    return (\r\n        <MainContainerAreaRestrita title={title}>\r\n            {utils.DataGridHeader(title, dataGridRows, columns, onClickAdd)}\r\n\r\n            <FormCadastro\r\n                title={title}\r\n                setFormOpen={setFormOpen}\r\n                formOpen={formOpen}\r\n                width={600}\r\n                recordID={recordID}\r\n                dataURL={dataURL}\r\n                getData={getData}\r\n                getUpdateDataGridRows={UpdateDataGridRows}\r\n            >\r\n                {utils.FormSelectInput('Tipo', onTipoChange, tipoValue, variaveisRows)}\r\n                {utils.FormTextInput('Nome', onNomeChange, nomeValue)}\r\n            </FormCadastro>\r\n        </MainContainerAreaRestrita>\r\n    )\r\n}","const title = 'Cadastro de Tipos de Agregações'\r\nconst dataURL = '/cadastro/agregacao_tipo'\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { MainContainerAreaRestrita } from '../../../components/template/Main'\r\nimport { getDataSource, deleteData, putData, postData } from '../../../api/datasource'\r\nimport FormCadastro from '../../../components/template/FormCadastro'\r\nimport Utils from './utils'\r\nlet utils = new Utils(\"\");\r\n\r\nexport default function () {\r\n    useEffect(() => {\r\n        getUpdateDataGridRows()\r\n    }, []);\r\n\r\n    const [dataGridRows, setDataGridRows] = useState([]);\r\n    const [formOpen, setFormOpen] = useState(false);\r\n    const [recordID, setRecordID] = useState(false);\r\n\r\n    // EDIT: Fields State    \r\n    const [nomeValue, setNomeValue] = useState(\"\");\r\n    const onNomeChange = (value) => { setNomeValue(value) }\r\n\r\n    const getUpdateDataGridRows = async function () {\r\n        const responseRows = await getDataSource(dataURL)\r\n        setDataGridRows(responseRows.data)\r\n    }\r\n\r\n    const getData = async function () {\r\n        return { nome: nomeValue }\r\n    }\r\n\r\n    const onClickAdd = function () {\r\n        setFormOpen(true)\r\n        setRecordID(false)\r\n        setNomeValue(\"\")\r\n    }\r\n\r\n    const renderEditButton = (params) => {\r\n        return (\r\n            <button className=\"btn\" type=\"button\" onClick={() => {\r\n                setRecordID(params.row.id)\r\n                setNomeValue(params.row.nome)\r\n                setFormOpen(true)\r\n            }}><i className=\"text-dark fas fa-pen\"></i>\r\n            </button>\r\n        )\r\n    }\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID', width: 120, hide: true },\r\n        { field: 'nome', headerName: 'Nome', flex: 1, width: 450 },\r\n        utils.DeleteButton(dataURL, getUpdateDataGridRows),\r\n        { field: 'edit', headerName: ' ', width: 60, renderCell: renderEditButton, disableClickEventBubbling: true, },\r\n    ];\r\n\r\n    return (\r\n        <MainContainerAreaRestrita title={title}>\r\n            {utils.DataGridHeader(title, dataGridRows, columns, onClickAdd)}\r\n\r\n            <FormCadastro\r\n                title={title}\r\n                setFormOpen={setFormOpen}\r\n                formOpen={formOpen}\r\n                width={600}\r\n                recordID={recordID}\r\n                dataURL={dataURL}\r\n                getData={getData}\r\n                getUpdateDataGridRows={getUpdateDataGridRows}\r\n            >\r\n                {utils.FormTextInput('Nome', onNomeChange, nomeValue)}\r\n            </FormCadastro>\r\n        </MainContainerAreaRestrita>\r\n    )\r\n}","const title = 'Cadastro de Agregações'\r\nconst dataURL = '/cadastro/agregacao'\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { MainContainerAreaRestrita } from '../../../components/template/Main'\r\nimport { getDataSource, deleteData, putData, postData } from '../../../api/datasource'\r\nimport FormCadastro from '../../../components/template/FormCadastro'\r\nimport Utils from './utils'\r\nlet utils = new Utils();\r\n\r\nexport default function () {\r\n    useEffect(() => {\r\n        getUpdateDataGridRows()\r\n    }, []);\r\n\r\n    const [dataGridRows, setDataGridRows] = useState([]);\r\n    let [agregacoesTiposView, setAgregacoesTipoView] = useState();\r\n    //let [agregacoesTiposAllowed, setAgregacoesTipoAllowed] = useState();\r\n    let [municipios, setMunicipios] = useState();\r\n    const [formOpen, setFormOpen] = useState(false);\r\n    const [recordID, setRecordID] = useState(false);\r\n\r\n    // EDIT: Fields State\r\n    const [tipoValue, setTipoValue] = useState(-1);\r\n    const [municipioValue, setMunicipioValue] = useState(-1);\r\n    const [nomeValue, setNomeValue] = useState(\"\");\r\n    const onTipoChange = (value) => { setTipoValue(value) }\r\n    const onMunicipioChange = (value) => { setMunicipioValue(value) }\r\n    const onNomeChange = (value) => { setNomeValue(value) }\r\n\r\n    const getUpdateDataGridRows = async function () {\r\n        // EDIT: Lookup fields first\r\n        const responseTipos = await getDataSource(\"/cadastro/agregacao_tipo\")\r\n        setAgregacoesTipoView(responseTipos.data)\r\n\r\n        const responseMunicipios = await getDataSource(\"/sys/municipio\")\r\n        setMunicipios(responseMunicipios.data)\r\n\r\n        const responseRows = await getDataSource(dataURL)\r\n        setDataGridRows(responseRows.data)\r\n    }\r\n\r\n    const getData = async function () {\r\n        var tipoId = typeof tipoValue != \"undefined\" ? tipoValue.id : \"\"\r\n        var arMunicipios = []\r\n        municipioValue.forEach(element => {\r\n            arMunicipios.push(element.municipio_codigo_ibge)\r\n        })\r\n\r\n        return {\r\n            nome: nomeValue,\r\n            agregacao_tipo_id: tipoId,\r\n            municipio_ids: arMunicipios,\r\n        }\r\n    }\r\n\r\n    const onClickAdd = function () {\r\n        setFormOpen(true)\r\n        setRecordID(false)\r\n        setTipoValue(agregacoesTiposView[-1])\r\n        setMunicipioValue([])\r\n        setNomeValue(\"\")\r\n    }\r\n\r\n\r\n    const renderEditButton = (params) => {\r\n        return (\r\n            <button className=\"btn\" type=\"button\" onClick={async () => {\r\n                if (params.row.onlyview_label === 'SIM') {\r\n                    alert(\"Esse registro não pode ser editado.\");\r\n                    return\r\n                }\r\n\r\n\r\n                setRecordID(params.row.id)\r\n                setTipoValue(agregacoesTiposView.find(item => item.id === params.row.agregacao_tipo_id))\r\n                const responseMunicipios = await getDataSource(\"/cadastro/agregacao_municipio/\" + params.row.id)\r\n                const municipiosData = responseMunicipios.data\r\n\r\n                let municipiosFound = []\r\n                municipiosData.forEach((item) => {\r\n                    var itemFind = municipios.find((municipioFind) => {\r\n                        return municipioFind.municipio_codigo_ibge === item.municipio_codigo_ibge;\r\n                    });\r\n                    municipiosFound.push(itemFind);\r\n                });\r\n                setMunicipioValue(municipiosFound)\r\n\r\n                setNomeValue(params.row.nome)\r\n                setFormOpen(true)\r\n            }}><i className=\"text-dark fas fa-pen\"></i>\r\n            </button>\r\n            // <Tooltip title=\"Editar\" aria-label=\"Editar\">\r\n            //     <Fab\r\n            //         size=\"small\"\r\n            //         aria-label=\"edit\"\r\n            //         onClick={async () => {\r\n\r\n            //             if (params.row.onlyview_label === 'SIM') {\r\n            //                 alert(\"Esse registro não pode ser editado.\");\r\n            //                 return\r\n            //             }\r\n\r\n\r\n            //             setRecordID(params.row.id)\r\n            //             setTipoValue(agregacoesTiposView.find(item => item.id === params.row.agregacao_tipo_id))\r\n            //             const responseMunicipios = await getDataSource(\"/cadastro/agregacao_municipio/\" + params.row.id)\r\n            //             const municipiosData = responseMunicipios.data\r\n\r\n            //             let municipiosFound = []\r\n            //             municipiosData.forEach((item) => {\r\n            //                 var itemFind = municipios.find((municipioFind) => {\r\n            //                     return municipioFind.municipio_codigo_ibge === item.municipio_codigo_ibge;\r\n            //                 });\r\n            //                 municipiosFound.push(itemFind);\r\n            //             });\r\n            //             setMunicipioValue(municipiosFound)\r\n\r\n            //             setNomeValue(params.row.nome)\r\n            //             setFormOpen(true)\r\n            //         }} ><EditIcon />\r\n            //     </Fab>\r\n            // </Tooltip>\r\n        )\r\n    }\r\n\r\n    const columns = [\r\n        { field: 'id', headerName: 'ID', width: 120, hide: true },\r\n        utils.LookupField(agregacoesTiposView, 'agregacao_tipo_id', 'Tipo'),\r\n        { field: 'nome', headerName: 'Nome', flex: 1, width: 450 },\r\n        { field: 'onlyview_label', headerName: 'Bloqueada', flex: 1, width: 450 },\r\n        utils.DeleteButton(dataURL, getUpdateDataGridRows, true),\r\n        //utils.EditButton(dataURL, setupFieldsEdit),\r\n        { field: 'edit', headerName: ' ', width: 60, renderCell: renderEditButton, disableClickEventBubbling: true, },\r\n    ];\r\n\r\n    return (\r\n        <MainContainerAreaRestrita title={title}>\r\n            {utils.DataGridHeader(title, dataGridRows, columns, onClickAdd)}\r\n            <FormCadastro\r\n                title={title}\r\n                setFormOpen={setFormOpen}\r\n                formOpen={formOpen}\r\n                width={600}\r\n                recordID={recordID}\r\n                dataURL={dataURL}\r\n                getData={getData}\r\n                getUpdateDataGridRows={getUpdateDataGridRows}\r\n            >\r\n                {utils.FormSelectInput('Tipo', onTipoChange, tipoValue, agregacoesTiposView)}\r\n                {utils.FormTextInput('Nome', onNomeChange, nomeValue)}\r\n                {utils.FormSelectInputMulti('Município', onMunicipioChange, municipioValue, municipios)}\r\n            </FormCadastro>\r\n        </MainContainerAreaRestrita>\r\n    )\r\n}","import React, { useState, useRef, useCallback, Fragment } from 'react'\r\n//import Dialog from '@material-ui/core/Dialog'\r\nimport Dialog from '@mui/material/Dialog'\r\n//import DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogTitle from '@mui/material/DialogTitle'\r\nimport * as XLSX from \"xlsx\";\r\nimport { postData } from '../../../api/datasource'\r\nimport { MainContainerAreaRestrita } from '../../../components/template/Main'\r\n\r\nexport default function () {\r\n    const [messages, setMessages] = useState(\"\")\r\n    const [loading, setLoading] = useState(false)\r\n    const [indicadores, setIndicadores] = useState()\r\n    const [btnImportarDisabled, setBtnImportarDisabled] = useState(true)\r\n\r\n    const [registrosEncontrados, setRegistrosEncontrados] = useState(\"\")\r\n\r\n    const onClick_LimparResultados = () => {\r\n        setIndicadores(null);\r\n        setMessages(\"\")\r\n        setRegistrosEncontradosText()\r\n    }\r\n\r\n\r\n    const onClick_ConcordoTermos = async (e) => {\r\n        if (e.target.checked) { setBtnImportarDisabled(false) }\r\n        else { setBtnImportarDisabled(true) }\r\n    }\r\n\r\n    const onChange_LerPlanilha = async (e) => {\r\n        setLoading(true)\r\n        e.stopPropagation()\r\n        e.preventDefault()\r\n        var arquivo = e.target.files[0]\r\n\r\n\r\n        if (e.target.files[0].type != \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\" &&\r\n            e.target.files[0].type != \"application/vnd.ms-excel\"\r\n        ) {\r\n            console.log('caiu aqui')\r\n            document.getElementById(\"file\").value = \"\"\r\n            setMessages(\r\n                <React.Fragment>\r\n                    <p className=\"mt-4 text-danger\">\r\n                        O arquivo selecionado para importação deve ser no formato de planilha com a extensão .xls ou xlsx.\r\n                    </p>\r\n\r\n                </React.Fragment>\r\n            )\r\n\r\n            setLoading(false)\r\n            return\r\n        }\r\n\r\n\r\n        try {\r\n            const reader = new FileReader()\r\n            reader.onload = (evt) => {\r\n                const bstr = evt.target.result\r\n                const wb = XLSX.read(bstr, { type: \"binary\" })\r\n                const wsname = wb.SheetNames[0]\r\n                const ws = wb.Sheets[wsname]\r\n                const data = XLSX.utils.sheet_to_json(ws, { header: 1 })\r\n\r\n                let fatoIndicadoresData = []\r\n                for (var i = 1; i < data.length; i++) {\r\n                    if (data[i][0]) {\r\n                        fatoIndicadoresData.push(\r\n                            {\r\n                                dimensao: data[i][0],\r\n                                indicador: data[i][1],\r\n                                categoria: data[i][2],\r\n                                tipo_variavel: data[i][3],\r\n                                nome_variavel: data[i][4],\r\n                                tipo_agregacao: data[i][5],\r\n                                nome_agregacao: data[i][6],\r\n                                valor: data[i][7],\r\n                                unidade: data[i][8],\r\n                                fonte: data[i][9],\r\n                                ano: data[i][10],\r\n                            }\r\n                        )\r\n                    }\r\n                }\r\n                setRegistrosEncontradosText(fatoIndicadoresData.length)\r\n                setIndicadores(fatoIndicadoresData)\r\n            }\r\n            reader.readAsBinaryString(arquivo);\r\n            setLoading(false)\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n\r\n    const setRegistrosEncontradosText = (quantidade) => {\r\n        if (quantidade > 0) {\r\n            setRegistrosEncontrados(`${quantidade} registros encontrados.`)\r\n        } else {\r\n            setRegistrosEncontrados(\"\")\r\n        }        \r\n    }\r\n\r\n    const onClick_EnviarPlanilha = async (e) => {\r\n\r\n        if (!indicadores) {\r\n            setMessages(\r\n                <React.Fragment>\r\n                    <p className=\"mt-4 text-danger\">Selecione um arquivo.</p>\r\n                </React.Fragment>\r\n            )\r\n            return\r\n        }\r\n\r\n        if (indicadores.length > 6000) {\r\n            setMessages(\r\n                <React.Fragment>\r\n                    <p className=\"mt-4 text-danger\">O número máximo de linhas permitido por arquivo são 6 mil.</p>\r\n                </React.Fragment>\r\n            )\r\n            return\r\n        }\r\n\r\n        if (indicadores == null) {\r\n            setMessages(\r\n                <React.Fragment>\r\n                    <p className=\"mt-4 text-danger\">Selecione uma planilha.</p>\r\n                </React.Fragment>\r\n            )\r\n            return\r\n        }\r\n\r\n        setLoading(true);\r\n        let result = await postData('/sys/dados/importacao', indicadores)\r\n\r\n        if (!result.isOk) {\r\n            setLoading(false);\r\n            const errosResponse = JSON.parse(result.message)\r\n\r\n            const errorType = errosResponse.type;\r\n            switch (errorType) {\r\n                case 'invalid_data':\r\n                    console.log('Dados inválidos.');\r\n                    setMessages(\r\n                        <React.Fragment>\r\n                            <p className=\"mt-4 text-danger\">\r\n                                A importação não foi realizada. Foram encontrados {errosResponse.messages.length} erros. Confira abaixo se os valores foram cadastrados corretamente no sistema ou se existe alguma formatação/grafia incorreta na planilha.\r\n                            </p>\r\n                            <table className=\"table table-striped\">\r\n                                <thead><tr><th>Linha</th><th>Campo</th><th>Valor</th></tr></thead>\r\n                                <tbody>\r\n                                    {errosResponse.messages.map((item, i) => {\r\n                                        return (\r\n                                            <tr key={i}>\r\n                                                <td>{item.linha}</td>\r\n                                                <td>{item.campo}</td>\r\n                                                <td>{item.valor}</td>\r\n                                            </tr>\r\n                                        );\r\n                                    })\r\n                                    }</tbody>\r\n                            </table>\r\n\r\n                        </React.Fragment>\r\n                    )\r\n                    break;\r\n                case 'no_records':\r\n                    console.log('Nenhum registro encontrado.');\r\n                    setMessages(\r\n                        <React.Fragment>\r\n                            <p className=\"mt-4 text-danger\">Nenhum registro encontrado</p>\r\n                        </React.Fragment>\r\n                    )\r\n                    break;\r\n                default:\r\n            }\r\n        }\r\n        else {\r\n            setLoading(false);\r\n            setMessages(\r\n                <React.Fragment>\r\n                    <p className=\"mt-4 text-success font-weight-bolder\"> {result.data.records_count} registros inseridos/atualizados.</p>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n\r\n        <MainContainerAreaRestrita title={'title'}>\r\n            <div className=\"d-flex\">\r\n                <div className=\"flex-fill\">\r\n                    <h3>Importação de indicadores</h3>\r\n                    <a href=\"/planilha_modelo.xlsx\" className=\"link-primary\"> Download da planilha modelo</a>\r\n                    <hr />\r\n                    <form>\r\n                        <input type=\"file\" id=\"file\" onChange={onChange_LerPlanilha} className=\"form-control-file\"\r\n                            accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel\"\r\n                        />\r\n                        <p className=\"text-primary\">{registrosEncontrados}</p>\r\n\r\n                        <div className=\"form-check mb-2 mt-4 mr-sm-2\">\r\n                            <label className=\"form-check-label\">\r\n                                <input className=\"form-check-input\" onClick={onClick_ConcordoTermos} type=\"checkbox\" /> Concordo que meus documentos estão em conformidade com item 4 do\r\n                                <a href=\"#\" data-bs-toggle=\"modal\" data-bs-target=\"#myModal\" className=\"link-primary\"> termo de uso.</a>\r\n                            </label>\r\n                        </div>\r\n                        <button type=\"reset\" className=\"btn btn-link\" onClick={onClick_LimparResultados} >Limpar resultados</button>\r\n                    </form>\r\n                    <hr />\r\n                    <button type=\"button\" onClick={onClick_EnviarPlanilha} disabled={btnImportarDisabled} className=\"btn btn-primary\">Importar</button>\r\n                    {messages}\r\n                </div>\r\n            </div>\r\n\r\n            <Dialog\r\n                open={loading}\r\n                disableBackdropClick={true}\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                    <div className=\"d-inline-flex\">\r\n                        <div className=\"mr-2\" >Aguarde</div>\r\n                        <div className=\"spinner-border text-muted\"></div>\r\n                    </div>\r\n                </DialogTitle>\r\n            </Dialog>\r\n\r\n\r\n            <div className=\"modal\" id=\"myModal\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n\r\n\r\n                        <div className=\"modal-header\">\r\n                            <h4 className=\"modal-title\">Termo de uso</h4>\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n                        </div>\r\n\r\n\r\n                        <div className=\"modal-body\">\r\n                            <p className=\"text-justify\">\r\n                                Manifesto o interesse em aderir à Plataforma de Gestão de Conhecimento em Soberania e Segurança Alimentar e Nutricional (PlaGeSSAN). Informo ter experiência, conhecimento e participação anterior em atividades de SSAN que contribuem com a realização do Direito Humano à Alimentação Adequada, conforme os pressupostos da Política Nacional de Segurança Alimentar e Nutricional (PNSAN), explicitados na Lei nº 11.346/2006, no Decreto nº 6.272/2007 e no Decreto nº 7.272/2010, e em outros documentos balizadores de âmbito internacional para ações dessa natureza. Nesse sentido, assumo a responsabilidade de respeitar tais princípios e diretrizes e que estes sejam norteadores dos projetos, comunidades, atividades colaborativas de SSAN apresentadas de forma intersetorial, interdisciplinar e por meio de diálogo de saberes; sejam na lógica de ensino, pesquisa e extensão na SSAN; e não façam uso da plataforma para fins comerciais, de autopromoção ou antiéticos, ratificando e mencionando estas informações no projeto/comunidades/atividades apresentadas. Compreendendo que o não atendimento de tais valores podem acarretar a minha exclusão e das minhas ações/ projetos/ comunidades/ atividades da Plataforma. Ainda, de acordo com a Lei n°12.813/2013, informo não apresentar conflito de interesses com o campo da soberania e segurança alimentar e nutricional, assim, não comprometendo o interesse coletivo ou influenciando de maneira imprópria o desempenho da função pública.\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </MainContainerAreaRestrita >\r\n    );\r\n}","import React, { useState, useRef, useCallback, Fragment, useEffect } from 'react';\r\nimport { getDataSource, deleteDataByJSON } from '../../../api/datasource'\r\nimport { MainContainerAreaRestrita } from '../../../components/template/Main'\r\nimport Select from 'react-select';\r\n\r\nexport default function () {\r\n    useEffect(() => {\r\n        upDateRows()\r\n    }, []);\r\n\r\n    const upDateRows = async () => {\r\n        const dimensoesRows = await getDataSource(\"/cadastro/dimensao\")\r\n        const indicadoresRows = await getDataSource(\"/cadastro/indicador\")\r\n        const categoriasRows = await getDataSource(\"/cadastro/categoria\")\r\n        const agregacoesTiposRows = await getDataSource(\"/cadastro/agregacao_tipo\")\r\n        const anosRows = await getDataSource(\"/cadastro/ano\")\r\n        setDimensoes(dimensoesRows.data)\r\n        setIndicadores(indicadoresRows.data)\r\n        setCategorias(categoriasRows.data)\r\n        setAgregacoesTipos(agregacoesTiposRows.data)\r\n        setAnos(anosRows.data)\r\n    }\r\n\r\n    const [messages, setMessages] = useState(\"\");\r\n    const [btnExcluirDisabled, setBtnExcluirDisabled] = useState(true);\r\n\r\n    let [dimensoes, setDimensoes] = useState();\r\n    const [dimensaoValue, setDimensaoValue] = useState(-1);\r\n    const onDimensaoChange = (value) => { setDimensaoValue(value) }\r\n\r\n    let [indicadores, setIndicadores] = useState();\r\n    const [indicadorValue, setIndicadorValue] = useState(-1);\r\n    const onIndicadorChange = (value) => { setIndicadorValue(value) }\r\n\r\n    let [categorias, setCategorias] = useState();\r\n    const [categoriaValue, setCategoriaValue] = useState(-1);\r\n    const onCategoriaChange = (value) => { setCategoriaValue(value) }\r\n\r\n    let [agregacoesTipos, setAgregacoesTipos] = useState();\r\n    const [agregacaoTipoValue, setAgregacaoTipoValue] = useState(-1);\r\n    const onAgregacaoTipoChange = (value) => { setAgregacaoTipoValue(value) }\r\n\r\n    let [anos, setAnos] = useState();\r\n    const [anoValue, setAnoValue] = useState(-1);\r\n    const onAnoChange = (value) => { setAnoValue(value) }\r\n\r\n    const onClick_ConfirmaExclusao = async (e) => {\r\n        if (e.target.checked) { setBtnExcluirDisabled(false) }\r\n        else { setBtnExcluirDisabled(true) }\r\n    }\r\n\r\n    const onClick_Excluir = async (e) => {\r\n\r\n        const JSONDelete = {\r\n            dimensao_id: dimensaoValue.id,\r\n            indicador_id: indicadorValue.id,\r\n            categoria_id: categoriaValue.id,\r\n            agregacao_tipo_id: agregacaoTipoValue.id,\r\n            ano: anoValue.nome\r\n        }\r\n\r\n        let result = await deleteDataByJSON(\"/sys/dados/importacao\", JSONDelete)\r\n\r\n        if (!result.isOk) {\r\n            const errosResponse = JSON.parse(result.message)\r\n            setMessages(\r\n                <React.Fragment>\r\n                    <p className=\"mt-4 text-danger\"><strong>Erros encontrados: </strong></p>\r\n                    <p className=\"mt-4 text-danger\">{errosResponse.messages}</p>\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            setMessages(\r\n                <React.Fragment>\r\n                    <p className=\"mt-4 text-danger\">Foram excluídos {result.data.records_count} registros.</p>\r\n                </React.Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    const inputSelect = (Label, onChange, value, options) => {\r\n        return <React.Fragment>\r\n            <div className=\"row mb-2\">\r\n\r\n                <div className=\"col-sm-2\">{Label}</div>\r\n                <div className=\"col-sm-4\">\r\n                    <Select\r\n                        value={value}\r\n                        onChange={onChange}\r\n                        isMulti={false}\r\n                        isSearchable={true}\r\n                        options={options}\r\n                        getOptionLabel={option => option.nome}\r\n                        getOptionValue={option => option.id}\r\n                    />\r\n                </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    }\r\n\r\n    return (\r\n        <MainContainerAreaRestrita title={'title'}>\r\n            <h3>Exclusão de indicadores</h3>\r\n            <p>Selecione uma combinação abaixo:</p>\r\n            <hr />\r\n\r\n            {inputSelect('Dimensão', onDimensaoChange, dimensaoValue, dimensoes)}\r\n            {inputSelect('Indicador', onIndicadorChange, indicadorValue, indicadores)}\r\n            {inputSelect('Categoria', onCategoriaChange, categoriaValue, categorias)}\r\n            {inputSelect('Tipo de Agregação', onAgregacaoTipoChange, agregacaoTipoValue, agregacoesTipos)}\r\n            {inputSelect('Ano', onAnoChange, anoValue, anos)}\r\n\r\n            <hr />\r\n            <div className=\"form-check mb-2 mr-sm-2\">\r\n                <label className=\"form-check-label\">\r\n                    <input className=\"form-check-input\" onClick={onClick_ConfirmaExclusao} type=\"checkbox\" /> Confirmar exclusão\r\n                </label>\r\n            </div>\r\n            <button type=\"button\" onClick={onClick_Excluir} disabled={btnExcluirDisabled} className=\"btn btn-primary\">Excluir</button>\r\n\r\n            {messages}\r\n\r\n\r\n\r\n            \r\n\r\n\r\n\r\n        </MainContainerAreaRestrita >\r\n    );\r\n}","import React from 'react'\r\nimport './Dialog.css'\r\n\r\nconst showMessage = (message) => {\r\n    var dialog = new bootstrap.Modal(document.getElementById('modaldialog'), {})\r\n    document.getElementById('modal_dialog_message').innerText = message\r\n    dialog.show()\r\n}\r\n\r\nexport default (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"modal mt-5\" id=\"modaldialog\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n\r\n                        <div className=\"alert alert-danger alert-dismissible fade show m-0 \">\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n                            <strong>Atenção!</strong>\r\n                        </div>\r\n\r\n                        <span id=\"modal_dialog_message\" className=\"p-4\" >\"\"</span>\r\n\r\n                        {/* <div className=\"modal-body\">\r\n                            \r\n                        </div> */}\r\n\r\n\r\n                        {/* <div className=\"modal-footer\">\r\n                            <button type=\"button\" className=\"btn btn-danger\" data-bs-dismiss=\"modal\">Fechar</button>\r\n                        </div> */}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport { showMessage }","import React, { useState, useEffect } from 'react';\r\n//import { getDataSource, deleteDataByKey, putData, postData } from '../../../api/datasource'\r\nimport Select from 'react-select';\r\n\r\n\r\nconst customStyles = {\r\n    option: (provided, state) => ({\r\n        ...provided,\r\n        // borderBottom: '1px dotted pink',\r\n        // color: state.isSelected ? 'red' : 'blue',\r\n        padding: 1,\r\n    }),\r\n    control: () => ({\r\n        // none of react-select's styles are passed to <Control />\r\n        width: '100%',\r\n    }),\r\n    singleValue: (provided, state) => {\r\n        const opacity = state.isDisabled ? 0.5 : 1;\r\n        const transition = 'opacity 300ms';\r\n\r\n        return { ...provided, opacity, transition };\r\n    }\r\n}\r\n\r\nexport default class Utils {\r\n\r\n    FormSelectInput = (data, onChange, value, multi = false) => {\r\n        return <Select\r\n            className={'p-0 m-0'}\r\n            // styles={customStyles}\r\n            placeholder={'Selecione...'}\r\n            value={value}\r\n            onChange={onChange}\r\n            isMulti={multi}\r\n            //isClearable={true}\r\n            isSearchable={true}\r\n            options={data}\r\n            getOptionLabel={option => option.nome}\r\n            getOptionValue={option => option.id}\r\n        />\r\n    }\r\n\r\n    FormSelectInputTemp = (multi = false) => {\r\n        return <Select\r\n            //id=\"inputSelect\"\r\n            //value={value}\r\n            //onChange={onChange}\r\n            isMulti={multi}\r\n            //isClearable={true}\r\n            isSearchable={true}\r\n            //options={data}\r\n            getOptionLabel={option => option.nome}\r\n            getOptionValue={option => option.id}\r\n        />\r\n    }\r\n\r\n\r\n    LookupField(data, field, headerName) {\r\n        //console.log('LookupField')\r\n        return {\r\n            field: field,\r\n            headerName: headerName,\r\n            width: 250,\r\n            valueGetter: (params) => {\r\n                let nome;\r\n                data.find(o => {\r\n                    if (params.row[field] == o.id) nome = o.nome\r\n                });\r\n                return nome\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    JSONToCSVConvertor(JSONData, ReportTitle, ShowLabel) {\r\n        //If JSONData is not an object then JSON.parse will parse the JSON string in an Object\r\n        var arrData = typeof JSONData != 'object' ? JSON.parse(JSONData) : JSONData;\r\n\r\n        var CSV = 'sep=,' + '\\r\\n\\n';\r\n\r\n        //This condition will generate the Label/Header\r\n        if (ShowLabel) {\r\n            var row = \"\";\r\n\r\n            //This loop will extract the label from 1st index of on array\r\n            for (var index in arrData[0]) {\r\n\r\n                //Now convert each value to string and comma-seprated\r\n                row += index + ',';\r\n            }\r\n\r\n            row = row.slice(0, -1);\r\n\r\n            //append Label row with line break\r\n            CSV += row + '\\r\\n';\r\n        }\r\n\r\n        //1st loop is to extract each row\r\n        for (var i = 0; i < arrData.length; i++) {\r\n            var row = \"\";\r\n\r\n            //2nd loop will extract each column and convert it in string comma-seprated\r\n            for (var index in arrData[i]) {\r\n                row += '\"' + arrData[i][index] + '\",';\r\n            }\r\n\r\n            row.slice(0, row.length - 1);\r\n\r\n            //add a line break after each row\r\n            CSV += row + '\\r\\n';\r\n        }\r\n\r\n        if (CSV == '') {\r\n            alert(\"Invalid data\");\r\n            return;\r\n        }\r\n\r\n        //Generate a file name\r\n        var fileName = \"PlaGeSSAN_\"\r\n        //this will remove the blank-spaces from the title and replace it with an underscore\r\n        fileName += ReportTitle.replace(/ /g, \"_\");\r\n\r\n        //Initialize file format you want csv or xls\r\n        var uri = 'data:text/csv;charset=utf-8,' + escape(CSV);\r\n\r\n        // Now the little tricky part.\r\n        // you can use either>> window.open(uri);\r\n        // but this will not work in some browsers\r\n        // or you will not get the correct file extension    \r\n\r\n        //this trick will generate a temp <a /> tag\r\n        var link = document.createElement(\"a\");\r\n        link.href = uri;\r\n\r\n        //set the visibility hidden so it will not effect on your web-layout\r\n        link.style = \"visibility:hidden\";\r\n        link.download = fileName + \".csv\";\r\n\r\n        //this part will append the anchor tag and remove it after automatic click\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n}","import React, { useState, useEffect, useRef } from 'react'\r\n//import { DataGrid } from \"@material-ui/data-grid\"\r\nimport {\r\n    DataGrid,\r\n    GridToolbarContainer,\r\n    GridToolbarExport,\r\n    gridClasses,\r\n    GridCsvExportOptions,\r\n} from '@mui/x-data-grid'\r\n\r\nimport Utils from '../utils'\r\nimport { getDataSource, postData } from '../../../../api/datasource'\r\n\r\nlet utils = new Utils(\"\");\r\n\r\nexport default (props) => {\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            // const responseCategorias = await getDataSource(\"/cadastro/categoria\")\r\n            // const responseVariaveis = await getDataSource(\"/cadastro/variavel\")\r\n            // const responseAgregacoes = await getDataSource(\"/cadastro/agregacao\")\r\n            // setCategorias(responseCategorias.data)\r\n            // setVariaveis(responseVariaveis.data)\r\n            // setAgregacoes(responseAgregacoes.data)\r\n        }\r\n        loadData()\r\n    }, []);\r\n\r\n    const columns = [\r\n        { field: 'categoria_nome', headerName: 'Categoria', hide: false, width: 200 },\r\n        { field: 'variavel_nome', headerName: 'Variável', hide: false, width: 200 },\r\n        { field: 'agregacao_nome', headerName: 'Agregação', hide: false, width: 200 },\r\n        { field: 'valor', headerName: 'Valor', hide: false },\r\n        { field: 'ano', headerName: 'Ano', hide: false }, // MULTI\r\n    ]\r\n\r\n    if (props.visible == false) return (<></>)\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div style={{ height: 600, width: '100%' }}>\r\n                <DataGrid\r\n                    rows={props.data_grid_rows}\r\n                    columns={columns}\r\n                    pageSize={50}\r\n                    checkboxSelection={false}\r\n                    disableSelectionOnClick={true}\r\n                />\r\n                <button onClick={() => {\r\n                    const JSONExport = []\r\n                    props.data_grid_rows.forEach(element => {\r\n                        JSONExport.push({\r\n                            dimensao: props.filterValues.dimensao,\r\n                            indicador: props.filterValues.indicador,\r\n                            categoria: element['categoria_nome'],\r\n                            tipo_variavel: props.filterValues.tipo_variavel,\r\n                            nome_variavel: element['variavel_nome'],\r\n                            tipo_agregacao: props.filterValues.tipo_agregacao,\r\n                            nome_agregacao: element['agregacao_nome'],\r\n                            valor: element['valor'],\r\n                            unidade: props.filterValues.unidade,\r\n                            fonte: props.filterValues.fonte,\r\n                            ano: element['ano'],\r\n                        })\r\n                    })\r\n                    utils.JSONToCSVConvertor(JSONExport, 'consulta_dimensoes_agregacoes_territoriais', true)\r\n                }} type=\"button\">Exportar</button>\r\n            </div>\r\n        </React.Fragment >\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nconst showMessage = (agregacao) => {\r\n    var dialog = new bootstrap.Modal(document.getElementById('modaldialog_cartograma'), {})\r\n    document.getElementById('cartograma_popup_agregacao_tipo').innerText = agregacao.filter.tipo_agregacao\r\n    document.getElementById('cartograma_popup_agregacao').innerText = agregacao.data.agregacao_nome\r\n    document.getElementById('cartograma_popup_dimensao').innerText = agregacao.filter.dimensao\r\n    document.getElementById('cartograma_popup_indicador').innerText = agregacao.filter.indicador\r\n    document.getElementById('cartograma_popup_categoria').innerText = agregacao.data.categoria_nome\r\n    document.getElementById('cartograma_popup_unidade').innerText = agregacao.filter.unidade\r\n    document.getElementById('cartograma_popup_variavel_tipo').innerText = agregacao.filter.tipo_variavel\r\n    document.getElementById('cartograma_popup_variavel').innerText = agregacao.data.variavel_nome\r\n    document.getElementById('cartograma_popup_fonte').innerText = agregacao.filter.fonte\r\n    document.getElementById('cartograma_popup_ano').innerText = agregacao.data.ano\r\n    document.getElementById('cartograma_popup_valor').innerText = agregacao.data.valor\r\n    dialog.show()\r\n}\r\n\r\nexport default (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"modal mt-5\" id=\"modaldialog_cartograma\">\r\n                <div className=\"modal-dialog\">\r\n                    <div className=\"modal-content\">\r\n\r\n                        <div className=\"alert alert-dark alert-dismissible fade show m-0 \">\r\n                            <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\"></button>\r\n                            <div className=\"d-flex flex-row bd-highlight\">\r\n                                <div className=\"bd-highlight fw-bold me-2\">Tipo da Agregação:</div>\r\n                                <div className=\"bd-highlight\"><span id=\"cartograma_popup_agregacao_tipo\"></span></div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"p-2\">\r\n                            <div className=\"d-flex flex-row bd-highlight\">\r\n                                <div className=\"bd-highlight fw-bold me-2\">Dimensão:</div>\r\n                                <div className=\"bd-highlight\"><span id=\"cartograma_popup_dimensao\"></span></div>\r\n                            </div>\r\n                            <div className=\"d-flex flex-row bd-highlight\">\r\n                                <div className=\"bd-highlight fw-bold me-2\">Indicador:</div>\r\n                                <div className=\"bd-highlight\"><span id=\"cartograma_popup_indicador\"></span></div>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex flex-row bd-highlight\">\r\n                                <div className=\"bd-highlight fw-bold me-2\">Unidade:</div>\r\n                                <div className=\"bd-highlight\"><span id=\"cartograma_popup_unidade\"></span></div>\r\n                            </div>\r\n                            <div className=\"d-flex flex-row bd-highlight\">\r\n                                <div className=\"bd-highlight fw-bold me-2\">Tipo da Variável:</div>\r\n                                <div className=\"bd-highlight\"><span id=\"cartograma_popup_variavel_tipo\"></span></div>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex flex-row bd-highlight\">\r\n                                <div className=\"bd-highlight fw-bold me-2\">Fonte:</div>\r\n                                <div className=\"bd-highlight\"><span id=\"cartograma_popup_fonte\"></span></div>\r\n                            </div>\r\n\r\n\r\n\r\n                            <hr />\r\n                            <div className=\"d-flex flex-row bd-highlight\">\r\n                                <div className=\"bd-highlight fw-bold me-2\">Categoria:</div>\r\n                                <div className=\"bd-highlight\"><span id=\"cartograma_popup_categoria\"></span></div>\r\n                            </div>\r\n                            <div className=\"d-flex flex-row bd-highlight\">\r\n                                <div className=\"bd-highlight fw-bold me-2\">Variável:</div>\r\n                                <div className=\"bd-highlight\"><span id=\"cartograma_popup_variavel\"></span></div>\r\n                            </div>\r\n                            <div className=\"d-flex flex-row bd-highlight\">\r\n                                <div className=\"bd-highlight fw-bold me-2\">Agregação:</div>\r\n                                <div className=\"bd-highlight\"><span id=\"cartograma_popup_agregacao\"></span></div>\r\n                            </div>\r\n                            <div className=\"d-flex flex-row bd-highlight\">\r\n                                <div className=\"bd-highlight fw-bold me-2\">Valor:</div>\r\n                                <div className=\"bd-highlight\"><span id=\"cartograma_popup_valor\"></span></div>\r\n                            </div>\r\n                            <div className=\"d-flex flex-row bd-highlight\">\r\n                                <div className=\"bd-highlight fw-bold me-2\">Ano:</div>\r\n                                <div className=\"bd-highlight\"><span id=\"cartograma_popup_ano\"></span></div>\r\n                            </div>\r\n                            <hr />\r\n\r\n\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport { showMessage }","import React, { useEffect, useState } from 'react'\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { MapContainer, GeoJSON, useMap } from 'react-leaflet'\r\nimport DialogCartograma, { showMessage } from './DialogCartograma'\r\nimport DialogAlert, { showMessage as showAlertMessage } from '../../../../components/template/Dialog'\r\nimport Utils from '../utils'\r\nlet utils = new Utils(\"\");\r\nimport { getDataSource, postData } from '../../../../api/datasource'\r\nconst dataURL = '/dados/consulta'\r\nconst municipioStyle = {\r\n    //fillColor: \"red\",\r\n    fillOpacity: .1,\r\n    color: \"black\",\r\n    weight: .5,\r\n};\r\n\r\nexport default (props) => {\r\n    const [content, setContent] = useState({});\r\n\r\n    // Filtro\r\n    const [categoriasFilterValue, setCategoriasFilterValue] = useState(null)\r\n    const [variaveisFilterValue, setVariaveisFilterValue] = useState(null)\r\n    const [anosFilterValue, setAnosFilterValue] = useState(null)\r\n\r\n    const [variaveisFilterData, setVariaveisFilterData] = useState([])\r\n    const [anosFilterData, setAnosFilterData] = useState([])\r\n\r\n    const onCategoriasFilterValueChange = async (value) => {\r\n        setGeoJSON(null)\r\n        setGeoJSON(null)\r\n        setCategoriasFilterValue(value)\r\n\r\n        setVariaveisFilterData(null)\r\n        setAnosFilterData(null)\r\n\r\n        setVariaveisFilterValue(null)\r\n        setAnosFilterValue(null)\r\n\r\n        let variaveis = props.filterValues.variaveis\r\n        let valuesVariaveis = []\r\n        variaveis.forEach(element => valuesVariaveis.push(element.id))\r\n\r\n        let agregacoes = props.filterValues.agregacoes\r\n        let valuesAgregacoes = []\r\n        agregacoes.forEach(element => valuesAgregacoes.push(element.id))\r\n\r\n        const query = `\r\n            fato_indicadores.dimensao_id = ${props.filterValues.dimensao_id} AND            \r\n            fato_indicadores.indicador_id =  ${props.filterValues.indicador_id} AND \r\n            fato_indicadores.categoria_id = ${value.id} AND\r\n            fato_indicadores.unidade_id = ${props.filterValues.unidade_id} AND \r\n            fato_indicadores.variavel_tipo_id = ${props.filterValues.tipo_variavel_id} AND \r\n            fato_indicadores.fonte_id = ${props.filterValues.fonte_id} AND \r\n            fato_indicadores.agregacao_tipo_id = ${props.filterValues.tipo_agregacao_id} AND\r\n            fato_indicadores.variavel_id IN (${valuesVariaveis.join(', ')}) AND\r\n            fato_indicadores.agregacao_id IN (${valuesAgregacoes.join(', ')})\r\n        `\r\n        console.log(query)\r\n        const bodyData = buildBodyData(\"variavel_id\", \"cad_variavel\", \"id\", \"nome\", query)\r\n        const response = await postData(\"/dados/consulta/get_filter_values\", bodyData)\r\n        setVariaveisFilterData(response.data)\r\n    }\r\n    const onVariaveisFilterValueChange = async (value) => {\r\n        setGeoJSON(null)\r\n        setGeoJSON(null)\r\n        setVariaveisFilterValue(value)\r\n\r\n        setAnosFilterData(null)\r\n        setAnosFilterValue(null)\r\n\r\n        let agregacoes = props.filterValues.agregacoes\r\n        let values = []\r\n        agregacoes.forEach(element => values.push(element.id))\r\n\r\n        const query = `\r\n            fato_indicadores.dimensao_id = ${props.filterValues.dimensao_id} AND            \r\n            fato_indicadores.indicador_id =  ${props.filterValues.indicador_id} AND \r\n            fato_indicadores.categoria_id = ${categoriasFilterValue.id} AND\r\n            fato_indicadores.unidade_id = ${props.filterValues.unidade_id} AND \r\n            fato_indicadores.variavel_tipo_id = ${props.filterValues.tipo_variavel_id} AND \r\n            fato_indicadores.fonte_id = ${props.filterValues.fonte_id} AND \r\n            fato_indicadores.agregacao_tipo_id = ${props.filterValues.tipo_agregacao_id} AND\r\n            fato_indicadores.agregacao_id IN (${values.join(', ')}) AND\r\n            fato_indicadores.variavel_id = ${value.id}\r\n        `\r\n        console.log(query)\r\n        const bodyData = buildBodyData(\"ano\", \"cad_ano\", \"id\", \"nome\", query)\r\n        const response = await postData(\"/dados/consulta/get_filter_values\", bodyData)\r\n        setAnosFilterData(response.data)\r\n\r\n\r\n    }\r\n    const onAnosFilterValueChange = async (value) => {\r\n        setGeoJSON(null)\r\n        setGeoJSON(null)\r\n        setAnosFilterValue(value)\r\n    }\r\n\r\n    const buildBodyData = (table_data_id, table_join, table_join_id, table_join_name, select_where) => {\r\n        return {\r\n            \"table_data_id\": table_data_id,\r\n            \"table_join\": table_join,\r\n            \"table_join_id\": table_join_id,\r\n            \"table_join_name\": table_join_name,\r\n            \"select_where\": select_where\r\n        }\r\n    }\r\n\r\n    //const [dataQuery, setDataQuery] = useState('')\r\n    const [geoJSON, setGeoJSON] = useState(null)\r\n    const [legenda, setLegenda] = useState(null)\r\n\r\n    const onEachFeatureClick = (agregacao, layer) => {\r\n\r\n        if (agregacao.properties.contorno_estados == \"0\") {\r\n            layer.on('click', function (e) {\r\n                const dataContent = {\r\n                    filter: props.filterValues,\r\n                    data: {\r\n                        nome: agregacao.properties.nome,\r\n                        ano: agregacao.properties.ano,\r\n                        valor: agregacao.properties.valor,\r\n                        categoria_nome: agregacao.properties.categoria_nome,\r\n                        variavel_nome: agregacao.properties.variavel_nome,\r\n                        agregacao_nome: agregacao.properties.agregacao_nome,\r\n                    }\r\n                }\r\n\r\n                setContent(dataContent)\r\n                //console.log(dataContent)\r\n                showMessage(dataContent)\r\n            })\r\n\r\n            layer.options.fillColor = agregacao.properties.background_color\r\n            layer.options.fillOpacity = 1\r\n        }\r\n    }\r\n\r\n    if (props.visible == false) return (<></>)\r\n\r\n\r\n    const rowClass = \"row align-items-center mb-2\"\r\n    const colLabel = \"col-1 fw-bold\"\r\n    const colSelect = \"col-4\"\r\n\r\n    function MyComponent() {\r\n        const map = useMap()\r\n        console.log('map center:', map.getCenter())\r\n        return null\r\n    }\r\n\r\n    const cssLabel = \"p-0 pt-2 px-2 m-0 fw-bold bg-light border\"\r\n    const cssFilter = \"p-0 m-0 me-2\"\r\n    return (\r\n        <React.Fragment>\r\n            <div className=\"mb-2\">\r\n\r\n\r\n                <div className=\"d-flex p-0 text-dark \">\r\n                    <div className=\"ps-4 pt-2\">Legenda de cores:</div>\r\n                </div>\r\n\r\n                <div className={'d-flex ps-4'}>\r\n\r\n                    <div className={cssLabel}>Categoria</div>\r\n                    <div className={cssFilter}>{utils.FormSelectInput(props.filterValues.categorias, onCategoriasFilterValueChange, categoriasFilterValue, false)}</div>\r\n\r\n                    <div className={cssLabel}>Variável</div>\r\n                    <div className={cssFilter}>{utils.FormSelectInput(variaveisFilterData, onVariaveisFilterValueChange, variaveisFilterValue, false)}</div>\r\n\r\n                    <div className={cssLabel}>Ano</div>\r\n                    <div className={cssFilter}>{utils.FormSelectInput(anosFilterData, onAnosFilterValueChange, anosFilterValue, false)}</div>\r\n\r\n                    <button onClick={async () => {\r\n                        console.log('Click')\r\n\r\n\r\n                        if (!categoriasFilterValue) {\r\n                            showAlertMessage('Selecione uma Categoria')\r\n                            return\r\n                        }\r\n\r\n                        if (!variaveisFilterValue) {\r\n                            showAlertMessage('Selecione uma Variável')\r\n                            return\r\n                        }\r\n\r\n                        if (!anosFilterValue) {\r\n                            showAlertMessage('Selecione um Ano')\r\n                            return\r\n                        }\r\n\r\n                        const dataQuery = `${props.dataQuery}                        \r\n                            AND fato_indicadores.categoria_id = ${categoriasFilterValue.id}\r\n                            AND fato_indicadores.variavel_id = ${variaveisFilterValue.id}\r\n                            AND fato_indicadores.ano = ${anosFilterValue.id}\r\n                        `\r\n\r\n                        console.log(dataQuery)\r\n\r\n\r\n\r\n                        const responseRows = await postData(dataURL, { query: dataQuery })\r\n\r\n                        console.log(responseRows.data)\r\n\r\n\r\n                        setGeoJSON(<GeoJSON\r\n                            style={municipioStyle}\r\n                            data={responseRows.data.geoson}\r\n                            onEachFeature={onEachFeatureClick}\r\n                        />\r\n                        )\r\n                        \r\n                        setLegenda(<div className=\"d-flex flex-row-reverse\">\r\n                            <div className=\"d-flex flex-column\">\r\n                                <div className=\"p-0\">Legenda:</div>\r\n                                <div className=\"p-1\" style={{ backgroundColor: responseRows.data.geoson_legenda.color_faixa_1, }}>{responseRows.data.geoson_legenda.max_faixa_1}</div>\r\n                                <div className=\"p-1\" style={{ backgroundColor: responseRows.data.geoson_legenda.color_faixa_2, }}>{responseRows.data.geoson_legenda.max_faixa_2}</div>\r\n                                <div className=\"p-1\" style={{ backgroundColor: responseRows.data.geoson_legenda.color_faixa_3, }}>{responseRows.data.geoson_legenda.max_faixa_3}</div>\r\n                                <div className=\"p-1\" style={{ backgroundColor: responseRows.data.geoson_legenda.color_faixa_4, }}>{responseRows.data.geoson_legenda.max_faixa_4}</div>\r\n                                <div className=\"p-1\" style={{ backgroundColor: responseRows.data.geoson_legenda.color_faixa_5, }}>{responseRows.data.geoson_legenda.max_faixa_5}</div>\r\n                            </div>\r\n                        </div>\r\n                        )\r\n\r\n                    }} type=\"button\" className=\"btn\">Gerar</button>\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <MapContainer style={{ height: \"90vh\" }} zoom={4} center={[-15.5, -54.6]}>\r\n                <MyComponent />\r\n                {legenda}\r\n\r\n                {geoJSON}\r\n\r\n                {/* <GeoJSON\r\n                    style={municipioStyle}\r\n                    data={geosonData}\r\n                    onEachFeature={onEachFeatureClick}\r\n                /> */}\r\n            </MapContainer>\r\n            <DialogAlert />\r\n            <DialogCartograma content={content} />\r\n        </React.Fragment>\r\n    )\r\n}","const title = 'Consulta de Dimensões/Agregações Territoriais'\r\nconst dataURL = '/dados/consulta'\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { MainContainerConsulta } from '../../../../components/template/Main'\r\n\r\nimport { getDataSource, postData } from '../../../../api/datasource'\r\nimport Dialog, { showMessage } from '../../../../components/template/Dialog'\r\nimport Planilha from './planilha'\r\nimport Cartograma from './cartograma'\r\nimport Utils from '../utils'\r\nlet utils = new Utils(\"\");\r\n\r\n\r\n\r\nexport default function () {\r\n\r\n    useEffect(() => {\r\n        const getDimensoes = async () => {\r\n            const dimensoesResponse = await getDataSource(\"/cadastro/dimensao\")\r\n            setDimensoesFilterData(dimensoesResponse.data)\r\n        }\r\n        getDimensoes()\r\n    }, []);\r\n\r\n    const [planilhaVisible, setPlanilhaVisible] = useState(false)\r\n    const [cartogramaVisible, setCartogramaVisible] = useState(false)\r\n\r\n    // Filtro\r\n    const [dimensoesFilterData, setDimensoesFilterData] = useState([])\r\n    const [indicadoresFilterData, setIndicadoresFilterData] = useState([])\r\n    const [categoriasFilterData, setCategoriasFilterData] = useState([])\r\n    const [variaveisTipoFilterData, setVariaveisTipoFilterData] = useState([])\r\n    const [variaveisFilterData, setVariaveisFilterData] = useState([])\r\n    const [agregacoesTipoFilterData, setAgregacoesTipoFilterData] = useState([])\r\n    const [agregacoesFilterData, setAgregacoesFilterData] = useState([])\r\n    const [unidadesFilterData, setUnidadesFilterData] = useState([])\r\n    const [fontesFilterData, setFontesFilterData] = useState([])\r\n    const [anosFilterData, setAnosFilterData] = useState([])\r\n\r\n    const [dimensoesFilterValue, setDimensoesFilterValue] = useState(\"\")\r\n    const [indicadoresFilterValue, setIndicadoresFilterValue] = useState(\"\")\r\n    const [categoriasFilterValue, setCategoriasFilterValue] = useState(\"\")\r\n    const [variaveisTipoFilterValue, setVariaveisTipoFilterValue] = useState(\"\")\r\n    const [variaveisFilterValue, setVariaveisFilterValue] = useState(\"\")\r\n    const [agregacoesTipoFilterValue, setAgregacoesTipoFilterValue] = useState(\"\")\r\n    const [agregacoesFilterValue, setAgregacoesFilterValue] = useState(\"\")\r\n    const [unidadesFilterValue, setUnidadesFilterValue] = useState(\"\")\r\n    const [fontesFilterValue, setFontesFilterValue] = useState(\"\")\r\n    const [anosFilterValue, setAnosFilterValue] = useState(\"\")\r\n\r\n    const [dimensoesQuery, setDimensoesQuery] = useState(\"\")\r\n    const [indicadoresQuery, setIndicadoresQuery] = useState(\"\")\r\n    const [categoriasQuery, setCategoriasQuery] = useState(\"\")\r\n    const [variaveisTipoQuery, setVariaveisTipoQuery] = useState(\"\")\r\n    const [variaveisQuery, setVariaveisQuery] = useState(\"\")\r\n    const [agregacoesTipoQuery, setAgregacoesTipoQuery] = useState(\"\")\r\n    const [unidadesQuery, setUnidadesQuery] = useState(\"\")\r\n    const [fontesQuery, setFontesQuery] = useState(\"\")\r\n    const [anosQuery, setAnosQuery] = useState(\"\")\r\n\r\n    const [dataQuery, setDataQuery] = useState(\"\")\r\n\r\n\r\n    \r\n\r\n    const buildBodyData = (table_data_id, table_join, table_join_id, table_join_name, select_where) => {\r\n        return {\r\n            \"table_data_id\": table_data_id,\r\n            \"table_join\": table_join,\r\n            \"table_join_id\": table_join_id,\r\n            \"table_join_name\": table_join_name,\r\n            \"select_where\": select_where\r\n        }\r\n    }\r\n\r\n    // Dimensão\r\n    const onDimensoesFilterValueChange = async (value) => {\r\n        setDimensoesFilterValue(value)\r\n        setIndicadoresFilterValue(\"\")\r\n        const query = \"dimensao_id = \" + value.id\r\n        setDimensoesQuery(query)\r\n        const bodyData = buildBodyData(\"indicador_id\", \"cad_indicador\", \"id\", \"nome\", query)\r\n        const response = await postData(\"/dados/consulta/get_filter_values\", bodyData)\r\n        setIndicadoresFilterData(response.data)\r\n    }\r\n\r\n    // Indicador\r\n    const onIndicadoresFilterValueChange = async (value) => {\r\n        setIndicadoresFilterValue(value)\r\n        setCategoriasFilterValue(\"\")\r\n        setUnidadesFilterValue(\"\")\r\n        setVariaveisTipoFilterValue(\"\")\r\n        setVariaveisFilterValue(\"\")\r\n        setFontesFilterValue(\"\")\r\n        setAnosFilterValue(\"\")\r\n        setAgregacoesTipoFilterValue(\"\")\r\n        setAgregacoesFilterValue(\"\")\r\n        resetResults()\r\n        const query = dimensoesQuery + \" AND indicador_id = \" + value.id\r\n        setIndicadoresQuery(query)\r\n        const bodyData = buildBodyData(\"categoria_id\", \"cad_categoria\", \"id\", \"nome\", query)\r\n        const response = await postData(\"/dados/consulta/get_filter_values\", bodyData)\r\n        setCategoriasFilterData(response.data)\r\n    }\r\n\r\n    // Categoria\r\n    const onCategoriasFilterValueChange = async (value) => {\r\n        setCategoriasFilterValue(value)\r\n        setUnidadesFilterValue(\"\")\r\n        setVariaveisTipoFilterValue(\"\")\r\n        setVariaveisFilterValue(\"\")\r\n        setFontesFilterValue(\"\")\r\n        setAnosFilterValue(\"\")\r\n        setAgregacoesTipoFilterValue(\"\")\r\n        setAgregacoesFilterValue(\"\")\r\n        resetResults()\r\n        let values = []\r\n        value.forEach(element => values.push(element.id));\r\n        const query = indicadoresQuery + ` AND categoria_id IN (${values.join(', ')})`\r\n        setCategoriasQuery(query)\r\n        const bodyData = buildBodyData(\"unidade_id\", \"cad_unidade\", \"id\", \"nome\", query)\r\n        const response = await postData(\"/dados/consulta/get_filter_values\", bodyData)\r\n        setUnidadesFilterData(response.data)\r\n    }\r\n\r\n    // Unidade\r\n    const onUnidadesFilterValueChange = async (value) => {\r\n        setUnidadesFilterValue(value)\r\n        setVariaveisTipoFilterValue(\"\")\r\n        setVariaveisFilterValue(\"\")\r\n        setFontesFilterValue(\"\")\r\n        setAnosFilterValue(\"\")\r\n        setAgregacoesTipoFilterValue(\"\")\r\n        setAgregacoesFilterValue(\"\")\r\n        resetResults()\r\n        const query = categoriasQuery + \" AND unidade_id = \" + value.id\r\n        setUnidadesQuery(query)\r\n        const bodyData = buildBodyData(\"variavel_tipo_id\", \"cad_variavel_tipo\", \"id\", \"nome\", query)\r\n        const response = await postData(\"/dados/consulta/get_filter_values\", bodyData)\r\n        setVariaveisTipoFilterData(response.data)\r\n    }\r\n\r\n    // Tipo da Variável\r\n    const onVariaveisTipoFilterValueChange = async (value) => {\r\n        setVariaveisTipoFilterValue(value)\r\n        setVariaveisFilterValue(\"\")\r\n        setFontesFilterValue(\"\")\r\n        setAnosFilterValue(\"\")\r\n        setAgregacoesTipoFilterValue(\"\")\r\n        setAgregacoesFilterValue(\"\")\r\n        resetResults()\r\n        const query = unidadesQuery + \" AND fato_indicadores.variavel_tipo_id = \" + value.id\r\n        setVariaveisTipoQuery(query)\r\n        const bodyData = buildBodyData(\"variavel_id\", \"cad_variavel\", \"id\", \"nome\", query)\r\n        const response = await postData(\"/dados/consulta/get_filter_values\", bodyData)\r\n        setVariaveisFilterData(response.data)\r\n    }\r\n\r\n    // Variável\r\n    const onVariaveisFilterValueChange = async (value) => {\r\n        setVariaveisFilterValue(value)\r\n        setFontesFilterValue(\"\")\r\n        setAnosFilterValue(\"\")\r\n        setAgregacoesTipoFilterValue(\"\")\r\n        setAgregacoesFilterValue(\"\")\r\n        resetResults()\r\n        let values = []\r\n        value.forEach(element => values.push(element.id))\r\n        const query = variaveisTipoQuery + ` AND variavel_id IN (${values.join(', ')})`\r\n        setVariaveisQuery(query)\r\n        const bodyData = buildBodyData(\"fonte_id\", \"cad_fonte\", \"id\", \"nome\", query)\r\n        const response = await postData(\"/dados/consulta/get_filter_values\", bodyData)\r\n        setFontesFilterData(response.data)\r\n    }\r\n\r\n    // Fonte\r\n    const onFontesFilterValueChange = async (value) => {\r\n        setFontesFilterValue(value)\r\n        setAnosFilterValue(\"\")\r\n        setAgregacoesTipoFilterValue(\"\")\r\n        setAgregacoesFilterValue(\"\")\r\n        resetResults()\r\n        const query = variaveisQuery + \" AND fato_indicadores.fonte_id = \" + value.id\r\n        setFontesQuery(query)\r\n        const bodyData = buildBodyData(\"ano\", \"cad_ano\", \"id\", \"nome\", query)\r\n        const response = await postData(\"/dados/consulta/get_filter_values\", bodyData)\r\n        setAnosFilterData(response.data)\r\n    }\r\n\r\n    // Ano\r\n    const onAnosFilterValueChange = async (value) => {\r\n        setAnosFilterValue(value)\r\n        setAgregacoesTipoFilterValue(\"\")\r\n        setAgregacoesFilterValue(\"\")\r\n        resetResults()\r\n        let values = []\r\n        value.forEach(element => values.push(element.id))\r\n        const query = fontesQuery + ` AND fato_indicadores.ano IN (${values.join(', ')})`\r\n        setAnosQuery(query)\r\n        const bodyData = buildBodyData(\"agregacao_tipo_id\", \"cad_agregacao_tipo\", \"id\", \"nome\", query)\r\n        const response = await postData(\"/dados/consulta/get_filter_values\", bodyData)\r\n        setAgregacoesTipoFilterData(response.data)\r\n    }\r\n\r\n    //Tipo da Agregação\r\n    const onAgregacoesTipoFilterValueChange = async (value) => {\r\n        setAgregacoesTipoFilterValue(value)\r\n        setAgregacoesFilterValue(\"\")\r\n        resetResults()\r\n        const query = anosQuery + \" AND fato_indicadores.agregacao_tipo_id = \" + value.id\r\n        setAgregacoesTipoQuery(query)\r\n        const bodyData = buildBodyData(\"agregacao_id\", \"cad_agregacao\", \"id\", \"nome\", query)\r\n        const response = await postData(\"/dados/consulta/get_filter_values\", bodyData)\r\n        setAgregacoesFilterData(response.data)\r\n    }\r\n\r\n    // Agregação\r\n    const onAgregacoesFilterValueChange = async (value) => {\r\n        setAgregacoesFilterValue(value)\r\n        resetResults()\r\n        let values = []\r\n        value.forEach(element => values.push(element.id))\r\n        const query = agregacoesTipoQuery + ` AND fato_indicadores.agregacao_id IN (${values.join(', ')})`\r\n        UpdateDataGridRows(query)\r\n    }\r\n\r\n    const [dataGridRows, setDataGridRows] = useState([]);\r\n\r\n    const UpdateDataGridRows = async function (dataQuery) {\r\n        setDataQuery(dataQuery)\r\n        const responseRows = await postData(dataURL, { query: dataQuery })\r\n        setDataGridRows(responseRows.data)\r\n    }\r\n\r\n    const btnCartogramaOnClick = async () => {\r\n        if (dataGridRows.length === 0) {\r\n            showMessage('Preencha os filtros')\r\n            return\r\n        }\r\n\r\n        setPlanilhaVisible(false)\r\n        setCartogramaVisible(true)\r\n    }\r\n\r\n    const btnPlanilhaOnClick = async () => {\r\n        if (dataGridRows.length === 0) {\r\n            showMessage('Preencha os filtros')\r\n            return\r\n        }\r\n        setCartogramaVisible(false)\r\n        setPlanilhaVisible(true)\r\n    }\r\n\r\n    const rowClass = \"row align-items-center mb-2\"\r\n    const colLabel = \"col-1 fw-bold\"\r\n    const colSelect = \"col-4\"\r\n\r\n\r\n    let filterValues = {\r\n        dimensao: dimensoesFilterValue.nome,\r\n        indicador: indicadoresFilterValue.nome,\r\n        unidade: unidadesFilterValue.nome,\r\n        tipo_variavel: variaveisTipoFilterValue.nome,\r\n        fonte: fontesFilterValue.nome,\r\n        ano: anosFilterValue.nome,\r\n        tipo_agregacao: agregacoesTipoFilterValue.nome,        \r\n\r\n        dimensao_id: dimensoesFilterValue.id,\r\n        indicador_id: indicadoresFilterValue.id,\r\n        unidade_id: unidadesFilterValue.id,\r\n        tipo_variavel_id: variaveisTipoFilterValue.id,\r\n        fonte_id: fontesFilterValue.id,\r\n        ano_id: anosFilterValue.id,\r\n        tipo_agregacao_id: agregacoesTipoFilterValue.id,        \r\n        \r\n        categorias: categoriasFilterValue,\r\n        variaveis: variaveisFilterValue,\r\n        //anos: anosFilterValue,\r\n        agregacoes: agregacoesFilterValue,\r\n    }\r\n\r\n    const resetResults = () => {\r\n        setDataGridRows([])\r\n        setCartogramaVisible(false)\r\n        setPlanilhaVisible(false)\r\n    }\r\n\r\n    const cssLabel = \"px-3 py-0 fw-bold\"\r\n    const cssFilter = \"px-2 py-0 mb-2\"\r\n\r\n    const RenderTitle = () => {\r\n        return <div>\r\n            <div className=\"d-flex p-0 bg-light text-dark border \">\r\n                <div className=\"ps-2 pt-2 h5\">{title}</div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    return (\r\n        <MainContainerConsulta title={title} css=\"mx-0\">\r\n\r\n            <div className=\"d-flex\">\r\n                <div className=\"border border-end-4\" style={{ width: \"280px\"  }}>\r\n                    <div className=\"mt-3 p-0 d-flex flex-column bg-light text-dark\">\r\n                        <div className={cssLabel}>Dimensão</div>\r\n                        <div className={cssFilter}>{utils.FormSelectInput(dimensoesFilterData, onDimensoesFilterValueChange, dimensoesFilterValue)}</div>\r\n\r\n                        <div className={cssLabel}>Indicador</div>\r\n                        <div className={cssFilter}>{utils.FormSelectInput(indicadoresFilterData, onIndicadoresFilterValueChange, indicadoresFilterValue)}</div>\r\n\r\n                        <div className={cssLabel}>Categoria</div>\r\n                        <div className={cssFilter}>{utils.FormSelectInput(categoriasFilterData, onCategoriasFilterValueChange, categoriasFilterValue, true)}</div>\r\n\r\n                        <div className={cssLabel}>Unidade</div>\r\n                        <div className={cssFilter}>{utils.FormSelectInput(unidadesFilterData, onUnidadesFilterValueChange, unidadesFilterValue)}</div>\r\n\r\n                        <div className={cssLabel}>Tipo da Variável</div>\r\n                        <div className={cssFilter}>{utils.FormSelectInput(variaveisTipoFilterData, onVariaveisTipoFilterValueChange, variaveisTipoFilterValue)}</div>\r\n\r\n                        <div className={cssLabel}>Variável</div>\r\n                        <div className={cssFilter}>{utils.FormSelectInput(variaveisFilterData, onVariaveisFilterValueChange, variaveisFilterValue, true)}</div>\r\n\r\n                        <div className={cssLabel}>Fonte</div>\r\n                        <div className={cssFilter}>{utils.FormSelectInput(fontesFilterData, onFontesFilterValueChange, fontesFilterValue)}</div>\r\n\r\n                        <div className={cssLabel}>Ano</div>\r\n                        <div className={cssFilter}>{utils.FormSelectInput(anosFilterData, onAnosFilterValueChange, anosFilterValue, true)}</div>\r\n\r\n                        <div className={cssLabel}>Tipo da Agregação</div>\r\n                        <div className={cssFilter}>{utils.FormSelectInput(agregacoesTipoFilterData, onAgregacoesTipoFilterValueChange, agregacoesTipoFilterValue)}</div>\r\n\r\n                        <div className={cssLabel}>Agregação</div>\r\n                        <div className={cssFilter}>{utils.FormSelectInput(agregacoesFilterData, onAgregacoesFilterValueChange, agregacoesFilterValue, true)}</div>\r\n\r\n\r\n\r\n                        <div className=\"d-flex\">\r\n                            <div className=\"ms-2 me-2 bg-info flex-fill\"><button style={{ width: \"100%\" }} id=\"btn_planilha\" type=\"button\" className=\"btn btn-dark px-4\" onClick={btnPlanilhaOnClick}>Planilha</button></div>\r\n                            <div className=\"me-2 bg-warning flex-fill\"><button style={{ width: \"100%\" }} id=\"btn_cartograma\" type=\"button\" className=\"btn btn-dark\" onClick={btnCartogramaOnClick}>Cartograma</button></div>\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"pt-0 flex-grow-1\" style={{ backgroundColor: \"#fff\" }}>\r\n                    <RenderTitle />\r\n                    <Planilha data_grid_rows={dataGridRows.tabela} visible={planilhaVisible} filterValues={filterValues} />\r\n                    <Cartograma visible={cartogramaVisible} geoson={dataGridRows.geoson} dataQuery={dataQuery} filterValues={filterValues} />\r\n                </div>\r\n                <Dialog />\r\n            </div>\r\n\r\n        </MainContainerConsulta>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Main from '../../../../components/template/Main'\r\nimport mapData from \"./countries.json\";\r\n\r\n\r\nimport municipios from './municipios.json'\r\n\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { MapContainer, GeoJSON } from 'react-leaflet'\r\n\r\nconst municipiosData = municipios.features\r\n\r\n\r\n\r\n\r\nconst title = 'Consulta de Dimensões/Condições Indicadores'\r\nexport default function () {\r\n    const municipioStyle = {\r\n        fillColor: \"red\",\r\n        fillOpacity: 1,\r\n        color: \"black\",\r\n        weight: 2,\r\n    };\r\n\r\n    const onEachFeatureClick = (municipio, layer) => {\r\n        const municipioNome = municipio.properties.nome\r\n        console.log(municipioNome)\r\n        //layer.bindPopup(municipioNome)\r\n        layer.options.fillColor = 'blue'\r\n\r\n        layer.on('click', function (e) {\r\n            // e = event\r\n            console.log(municipioNome);\r\n            // You can make your ajax call declaration here\r\n            //$.ajax(... \r\n        });\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <Main title={title}>\r\n            <h3>{title}</h3>      \r\n            <span>Em desenvolvimento...</span>      \r\n        </Main>\r\n    )\r\n}","import React from 'react'\nimport { Switch, Route, Redirect } from 'react-router'\n\nimport Home from '../components/home/Home'\n\nimport Dimensao from '../pages/area_restrita/cadastro/dimensao'\nimport Indicador from '../pages/area_restrita/cadastro/indicador'\nimport Categoria from '../pages/area_restrita/cadastro/categoria'\nimport Unidade from '../pages/area_restrita/cadastro/unidade'\nimport Fonte from '../pages/area_restrita/cadastro/fonte'\nimport Nota from '../pages/area_restrita/cadastro/nota'\nimport VariavelTipo from '../pages/area_restrita/cadastro/variavel_tipo'\nimport Variavel from '../pages/area_restrita/cadastro/variavel'\nimport AgregacaoTipo from '../pages/area_restrita/cadastro/agregacao_tipo'\nimport Agregacao from '../pages/area_restrita/cadastro/agregacao'\n\nimport DadosImportacao from '../pages/area_restrita/dados/importacao'\nimport DadosExclusao from '../pages/area_restrita/dados/exclusao'\nimport ConsultaDimensoesAgregaçõesTerritoriais from '../pages/area_restrita/dados/consulta_dimensoes_agregacoes_territoriais/'\nimport ConsultaDimensoesCondiçõesIndicadores from '../pages/area_restrita/dados/consulta_dimensoes_condicoes_indicadores/'\n\nexport default props => \n    <Switch>\n        <Route exact path='/' component={Home} />\n        \n        <Route path='/admin/cadastro/dimensao' component={Dimensao} />\n        <Route path='/admin/cadastro/indicador' component={Indicador} />        \n        <Route path='/admin/cadastro/categoria' component={Categoria} />\n        <Route path='/admin/cadastro/unidade' component={Unidade} />\n        <Route path='/admin/cadastro/fonte' component={Fonte} />\n        <Route path='/admin/cadastro/nota' component={Nota} />\n        <Route path='/admin/cadastro/variavel_tipo' component={VariavelTipo} />\n        <Route path='/admin/cadastro/variavel' component={Variavel} />\n        <Route path='/admin/cadastro/agregacao_tipo' component={AgregacaoTipo} />\n        <Route path='/admin/cadastro/agregacao' component={Agregacao} />               \n\n        <Route path='/admin/dados/importacao' component={DadosImportacao} />\n        <Route path='/admin/dados/exclusao' component={DadosExclusao} />\n        <Route path='/admin/dados/consulta_dimensoes_agregacoes_territoriais' component={ConsultaDimensoesAgregaçõesTerritoriais} />\n        <Route path='/admin/dados/consulta_dimensoes_condicoes_indicadores' component={ConsultaDimensoesCondiçõesIndicadores} />\n\n\n\n        <Redirect from='*' to='/' />\n    </Switch>","import './App.css'\nimport React from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport Routes from './Routes'\n\nexport default props =>\n    <BrowserRouter>\n        <div className=\"app\">\n            <Routes />            \n        </div>\n    </BrowserRouter>","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}